/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 7.0, "minX": 0.0, "maxY": 13866.0, "series": [{"data": [[0.0, 190.0], [0.1, 190.0], [0.2, 190.0], [0.3, 190.0], [0.4, 190.0], [0.5, 241.0], [0.6, 241.0], [0.7, 241.0], [0.8, 241.0], [0.9, 241.0], [1.0, 244.0], [1.1, 244.0], [1.2, 244.0], [1.3, 244.0], [1.4, 244.0], [1.5, 261.0], [1.6, 261.0], [1.7, 261.0], [1.8, 261.0], [1.9, 261.0], [2.0, 316.0], [2.1, 316.0], [2.2, 316.0], [2.3, 316.0], [2.4, 316.0], [2.5, 324.0], [2.6, 324.0], [2.7, 324.0], [2.8, 324.0], [2.9, 324.0], [3.0, 343.0], [3.1, 343.0], [3.2, 343.0], [3.3, 343.0], [3.4, 343.0], [3.5, 346.0], [3.6, 346.0], [3.7, 346.0], [3.8, 346.0], [3.9, 346.0], [4.0, 378.0], [4.1, 378.0], [4.2, 378.0], [4.3, 378.0], [4.4, 378.0], [4.5, 428.0], [4.6, 428.0], [4.7, 428.0], [4.8, 428.0], [4.9, 428.0], [5.0, 456.0], [5.1, 456.0], [5.2, 456.0], [5.3, 456.0], [5.4, 456.0], [5.5, 472.0], [5.6, 472.0], [5.7, 472.0], [5.8, 472.0], [5.9, 472.0], [6.0, 474.0], [6.1, 474.0], [6.2, 474.0], [6.3, 474.0], [6.4, 474.0], [6.5, 571.0], [6.6, 571.0], [6.7, 571.0], [6.8, 571.0], [6.9, 571.0], [7.0, 592.0], [7.1, 592.0], [7.2, 592.0], [7.3, 592.0], [7.4, 592.0], [7.5, 600.0], [7.6, 600.0], [7.7, 600.0], [7.8, 600.0], [7.9, 600.0], [8.0, 602.0], [8.1, 602.0], [8.2, 602.0], [8.3, 602.0], [8.4, 602.0], [8.5, 616.0], [8.6, 616.0], [8.7, 616.0], [8.8, 616.0], [8.9, 616.0], [9.0, 617.0], [9.1, 617.0], [9.2, 617.0], [9.3, 617.0], [9.4, 617.0], [9.5, 624.0], [9.6, 624.0], [9.7, 624.0], [9.8, 624.0], [9.9, 624.0], [10.0, 681.0], [10.1, 681.0], [10.2, 681.0], [10.3, 681.0], [10.4, 681.0], [10.5, 688.0], [10.6, 688.0], [10.7, 688.0], [10.8, 688.0], [10.9, 688.0], [11.0, 693.0], [11.1, 693.0], [11.2, 693.0], [11.3, 693.0], [11.4, 693.0], [11.5, 721.0], [11.6, 721.0], [11.7, 721.0], [11.8, 721.0], [11.9, 721.0], [12.0, 727.0], [12.1, 727.0], [12.2, 727.0], [12.3, 727.0], [12.4, 727.0], [12.5, 743.0], [12.6, 743.0], [12.7, 743.0], [12.8, 743.0], [12.9, 743.0], [13.0, 748.0], [13.1, 748.0], [13.2, 748.0], [13.3, 748.0], [13.4, 748.0], [13.5, 749.0], [13.6, 749.0], [13.7, 749.0], [13.8, 749.0], [13.9, 749.0], [14.0, 768.0], [14.1, 768.0], [14.2, 768.0], [14.3, 768.0], [14.4, 768.0], [14.5, 812.0], [14.6, 812.0], [14.7, 812.0], [14.8, 812.0], [14.9, 812.0], [15.0, 839.0], [15.1, 839.0], [15.2, 839.0], [15.3, 839.0], [15.4, 839.0], [15.5, 1073.0], [15.6, 1073.0], [15.7, 1073.0], [15.8, 1073.0], [15.9, 1073.0], [16.0, 1077.0], [16.1, 1077.0], [16.2, 1077.0], [16.3, 1077.0], [16.4, 1077.0], [16.5, 1165.0], [16.6, 1165.0], [16.7, 1165.0], [16.8, 1165.0], [16.9, 1165.0], [17.0, 1299.0], [17.1, 1299.0], [17.2, 1299.0], [17.3, 1299.0], [17.4, 1299.0], [17.5, 1309.0], [17.6, 1309.0], [17.7, 1309.0], [17.8, 1309.0], [17.9, 1309.0], [18.0, 1331.0], [18.1, 1331.0], [18.2, 1331.0], [18.3, 1331.0], [18.4, 1331.0], [18.5, 1388.0], [18.6, 1388.0], [18.7, 1388.0], [18.8, 1388.0], [18.9, 1388.0], [19.0, 1395.0], [19.1, 1395.0], [19.2, 1395.0], [19.3, 1395.0], [19.4, 1395.0], [19.5, 1427.0], [19.6, 1427.0], [19.7, 1427.0], [19.8, 1427.0], [19.9, 1427.0], [20.0, 1448.0], [20.1, 1448.0], [20.2, 1448.0], [20.3, 1448.0], [20.4, 1448.0], [20.5, 1469.0], [20.6, 1469.0], [20.7, 1469.0], [20.8, 1469.0], [20.9, 1469.0], [21.0, 1470.0], [21.1, 1470.0], [21.2, 1470.0], [21.3, 1470.0], [21.4, 1470.0], [21.5, 1481.0], [21.6, 1481.0], [21.7, 1481.0], [21.8, 1481.0], [21.9, 1481.0], [22.0, 1530.0], [22.1, 1530.0], [22.2, 1530.0], [22.3, 1530.0], [22.4, 1530.0], [22.5, 1532.0], [22.6, 1532.0], [22.7, 1532.0], [22.8, 1532.0], [22.9, 1532.0], [23.0, 1553.0], [23.1, 1553.0], [23.2, 1553.0], [23.3, 1553.0], [23.4, 1553.0], [23.5, 1574.0], [23.6, 1574.0], [23.7, 1574.0], [23.8, 1574.0], [23.9, 1574.0], [24.0, 1603.0], [24.1, 1603.0], [24.2, 1603.0], [24.3, 1603.0], [24.4, 1603.0], [24.5, 1612.0], [24.6, 1612.0], [24.7, 1612.0], [24.8, 1612.0], [24.9, 1612.0], [25.0, 1618.0], [25.1, 1618.0], [25.2, 1618.0], [25.3, 1618.0], [25.4, 1618.0], [25.5, 1623.0], [25.6, 1623.0], [25.7, 1623.0], [25.8, 1623.0], [25.9, 1623.0], [26.0, 1631.0], [26.1, 1631.0], [26.2, 1631.0], [26.3, 1631.0], [26.4, 1631.0], [26.5, 1640.0], [26.6, 1640.0], [26.7, 1640.0], [26.8, 1640.0], [26.9, 1640.0], [27.0, 1667.0], [27.1, 1667.0], [27.2, 1667.0], [27.3, 1667.0], [27.4, 1667.0], [27.5, 1678.0], [27.6, 1678.0], [27.7, 1678.0], [27.8, 1678.0], [27.9, 1678.0], [28.0, 1744.0], [28.1, 1744.0], [28.2, 1744.0], [28.3, 1744.0], [28.4, 1744.0], [28.5, 1817.0], [28.6, 1817.0], [28.7, 1817.0], [28.8, 1817.0], [28.9, 1817.0], [29.0, 1859.0], [29.1, 1859.0], [29.2, 1859.0], [29.3, 1859.0], [29.4, 1859.0], [29.5, 1866.0], [29.6, 1866.0], [29.7, 1866.0], [29.8, 1866.0], [29.9, 1866.0], [30.0, 1866.0], [30.1, 1866.0], [30.2, 1866.0], [30.3, 1866.0], [30.4, 1866.0], [30.5, 1872.0], [30.6, 1872.0], [30.7, 1872.0], [30.8, 1872.0], [30.9, 1872.0], [31.0, 1880.0], [31.1, 1880.0], [31.2, 1880.0], [31.3, 1880.0], [31.4, 1880.0], [31.5, 1882.0], [31.6, 1882.0], [31.7, 1882.0], [31.8, 1882.0], [31.9, 1882.0], [32.0, 1917.0], [32.1, 1917.0], [32.2, 1917.0], [32.3, 1917.0], [32.4, 1917.0], [32.5, 1922.0], [32.6, 1922.0], [32.7, 1922.0], [32.8, 1922.0], [32.9, 1922.0], [33.0, 1969.0], [33.1, 1969.0], [33.2, 1969.0], [33.3, 1969.0], [33.4, 1969.0], [33.5, 2008.0], [33.6, 2008.0], [33.7, 2008.0], [33.8, 2008.0], [33.9, 2008.0], [34.0, 2036.0], [34.1, 2036.0], [34.2, 2036.0], [34.3, 2036.0], [34.4, 2036.0], [34.5, 2104.0], [34.6, 2104.0], [34.7, 2104.0], [34.8, 2104.0], [34.9, 2104.0], [35.0, 2178.0], [35.1, 2178.0], [35.2, 2178.0], [35.3, 2178.0], [35.4, 2178.0], [35.5, 2237.0], [35.6, 2237.0], [35.7, 2237.0], [35.8, 2237.0], [35.9, 2237.0], [36.0, 2518.0], [36.1, 2518.0], [36.2, 2518.0], [36.3, 2518.0], [36.4, 2518.0], [36.5, 2667.0], [36.6, 2667.0], [36.7, 2667.0], [36.8, 2667.0], [36.9, 2667.0], [37.0, 2693.0], [37.1, 2693.0], [37.2, 2693.0], [37.3, 2693.0], [37.4, 2693.0], [37.5, 2775.0], [37.6, 2775.0], [37.7, 2775.0], [37.8, 2775.0], [37.9, 2775.0], [38.0, 2832.0], [38.1, 2832.0], [38.2, 2832.0], [38.3, 2832.0], [38.4, 2832.0], [38.5, 3171.0], [38.6, 3171.0], [38.7, 3171.0], [38.8, 3171.0], [38.9, 3171.0], [39.0, 3191.0], [39.1, 3191.0], [39.2, 3191.0], [39.3, 3191.0], [39.4, 3191.0], [39.5, 3191.0], [39.6, 3191.0], [39.7, 3191.0], [39.8, 3191.0], [39.9, 3191.0], [40.0, 3211.0], [40.1, 3211.0], [40.2, 3211.0], [40.3, 3211.0], [40.4, 3211.0], [40.5, 3224.0], [40.6, 3224.0], [40.7, 3224.0], [40.8, 3224.0], [40.9, 3224.0], [41.0, 3362.0], [41.1, 3362.0], [41.2, 3362.0], [41.3, 3362.0], [41.4, 3362.0], [41.5, 3591.0], [41.6, 3591.0], [41.7, 3591.0], [41.8, 3591.0], [41.9, 3591.0], [42.0, 3714.0], [42.1, 3714.0], [42.2, 3714.0], [42.3, 3714.0], [42.4, 3714.0], [42.5, 3714.0], [42.6, 3714.0], [42.7, 3714.0], [42.8, 3714.0], [42.9, 3714.0], [43.0, 3827.0], [43.1, 3827.0], [43.2, 3827.0], [43.3, 3827.0], [43.4, 3827.0], [43.5, 3863.0], [43.6, 3863.0], [43.7, 3863.0], [43.8, 3863.0], [43.9, 3863.0], [44.0, 3863.0], [44.1, 3863.0], [44.2, 3863.0], [44.3, 3863.0], [44.4, 3863.0], [44.5, 3873.0], [44.6, 3873.0], [44.7, 3873.0], [44.8, 3873.0], [44.9, 3873.0], [45.0, 3974.0], [45.1, 3974.0], [45.2, 3974.0], [45.3, 3974.0], [45.4, 3974.0], [45.5, 3976.0], [45.6, 3976.0], [45.7, 3976.0], [45.8, 3976.0], [45.9, 3976.0], [46.0, 3987.0], [46.1, 3987.0], [46.2, 3987.0], [46.3, 3987.0], [46.4, 3987.0], [46.5, 4007.0], [46.6, 4007.0], [46.7, 4007.0], [46.8, 4007.0], [46.9, 4007.0], [47.0, 4024.0], [47.1, 4024.0], [47.2, 4024.0], [47.3, 4024.0], [47.4, 4024.0], [47.5, 4024.0], [47.6, 4024.0], [47.7, 4024.0], [47.8, 4024.0], [47.9, 4024.0], [48.0, 4041.0], [48.1, 4041.0], [48.2, 4041.0], [48.3, 4041.0], [48.4, 4041.0], [48.5, 4185.0], [48.6, 4185.0], [48.7, 4185.0], [48.8, 4185.0], [48.9, 4185.0], [49.0, 4219.0], [49.1, 4219.0], [49.2, 4219.0], [49.3, 4219.0], [49.4, 4219.0], [49.5, 4221.0], [49.6, 4221.0], [49.7, 4221.0], [49.8, 4221.0], [49.9, 4221.0], [50.0, 4234.0], [50.1, 4234.0], [50.2, 4234.0], [50.3, 4234.0], [50.4, 4234.0], [50.5, 4363.0], [50.6, 4363.0], [50.7, 4363.0], [50.8, 4363.0], [50.9, 4363.0], [51.0, 4766.0], [51.1, 4766.0], [51.2, 4766.0], [51.3, 4766.0], [51.4, 4766.0], [51.5, 4788.0], [51.6, 4788.0], [51.7, 4788.0], [51.8, 4788.0], [51.9, 4788.0], [52.0, 4960.0], [52.1, 4960.0], [52.2, 4960.0], [52.3, 4960.0], [52.4, 4960.0], [52.5, 5076.0], [52.6, 5076.0], [52.7, 5076.0], [52.8, 5076.0], [52.9, 5076.0], [53.0, 5132.0], [53.1, 5132.0], [53.2, 5132.0], [53.3, 5132.0], [53.4, 5132.0], [53.5, 5169.0], [53.6, 5169.0], [53.7, 5169.0], [53.8, 5169.0], [53.9, 5169.0], [54.0, 5285.0], [54.1, 5285.0], [54.2, 5285.0], [54.3, 5285.0], [54.4, 5285.0], [54.5, 5408.0], [54.6, 5408.0], [54.7, 5408.0], [54.8, 5408.0], [54.9, 5408.0], [55.0, 5431.0], [55.1, 5431.0], [55.2, 5431.0], [55.3, 5431.0], [55.4, 5431.0], [55.5, 5595.0], [55.6, 5595.0], [55.7, 5595.0], [55.8, 5595.0], [55.9, 5595.0], [56.0, 5667.0], [56.1, 5667.0], [56.2, 5667.0], [56.3, 5667.0], [56.4, 5667.0], [56.5, 5668.0], [56.6, 5668.0], [56.7, 5668.0], [56.8, 5668.0], [56.9, 5668.0], [57.0, 5833.0], [57.1, 5833.0], [57.2, 5833.0], [57.3, 5833.0], [57.4, 5833.0], [57.5, 5878.0], [57.6, 5878.0], [57.7, 5878.0], [57.8, 5878.0], [57.9, 5878.0], [58.0, 5886.0], [58.1, 5886.0], [58.2, 5886.0], [58.3, 5886.0], [58.4, 5886.0], [58.5, 5933.0], [58.6, 5933.0], [58.7, 5933.0], [58.8, 5933.0], [58.9, 5933.0], [59.0, 5965.0], [59.1, 5965.0], [59.2, 5965.0], [59.3, 5965.0], [59.4, 5965.0], [59.5, 6059.0], [59.6, 6059.0], [59.7, 6059.0], [59.8, 6059.0], [59.9, 6059.0], [60.0, 6290.0], [60.1, 6290.0], [60.2, 6290.0], [60.3, 6290.0], [60.4, 6290.0], [60.5, 6333.0], [60.6, 6333.0], [60.7, 6333.0], [60.8, 6333.0], [60.9, 6333.0], [61.0, 6345.0], [61.1, 6345.0], [61.2, 6345.0], [61.3, 6345.0], [61.4, 6345.0], [61.5, 6384.0], [61.6, 6384.0], [61.7, 6384.0], [61.8, 6384.0], [61.9, 6384.0], [62.0, 6386.0], [62.1, 6386.0], [62.2, 6386.0], [62.3, 6386.0], [62.4, 6386.0], [62.5, 6464.0], [62.6, 6464.0], [62.7, 6464.0], [62.8, 6464.0], [62.9, 6464.0], [63.0, 6639.0], [63.1, 6639.0], [63.2, 6639.0], [63.3, 6639.0], [63.4, 6639.0], [63.5, 6655.0], [63.6, 6655.0], [63.7, 6655.0], [63.8, 6655.0], [63.9, 6655.0], [64.0, 6778.0], [64.1, 6778.0], [64.2, 6778.0], [64.3, 6778.0], [64.4, 6778.0], [64.5, 6870.0], [64.6, 6870.0], [64.7, 6870.0], [64.8, 6870.0], [64.9, 6870.0], [65.0, 6946.0], [65.1, 6946.0], [65.2, 6946.0], [65.3, 6946.0], [65.4, 6946.0], [65.5, 7046.0], [65.6, 7046.0], [65.7, 7046.0], [65.8, 7046.0], [65.9, 7046.0], [66.0, 7064.0], [66.1, 7064.0], [66.2, 7064.0], [66.3, 7064.0], [66.4, 7064.0], [66.5, 7069.0], [66.6, 7069.0], [66.7, 7069.0], [66.8, 7069.0], [66.9, 7069.0], [67.0, 7120.0], [67.1, 7120.0], [67.2, 7120.0], [67.3, 7120.0], [67.4, 7120.0], [67.5, 7137.0], [67.6, 7137.0], [67.7, 7137.0], [67.8, 7137.0], [67.9, 7137.0], [68.0, 7165.0], [68.1, 7165.0], [68.2, 7165.0], [68.3, 7165.0], [68.4, 7165.0], [68.5, 7168.0], [68.6, 7168.0], [68.7, 7168.0], [68.8, 7168.0], [68.9, 7168.0], [69.0, 7247.0], [69.1, 7247.0], [69.2, 7247.0], [69.3, 7247.0], [69.4, 7247.0], [69.5, 7355.0], [69.6, 7355.0], [69.7, 7355.0], [69.8, 7355.0], [69.9, 7355.0], [70.0, 7402.0], [70.1, 7402.0], [70.2, 7402.0], [70.3, 7402.0], [70.4, 7402.0], [70.5, 7422.0], [70.6, 7422.0], [70.7, 7422.0], [70.8, 7422.0], [70.9, 7422.0], [71.0, 7546.0], [71.1, 7546.0], [71.2, 7546.0], [71.3, 7546.0], [71.4, 7546.0], [71.5, 7576.0], [71.6, 7576.0], [71.7, 7576.0], [71.8, 7576.0], [71.9, 7576.0], [72.0, 7907.0], [72.1, 7907.0], [72.2, 7907.0], [72.3, 7907.0], [72.4, 7907.0], [72.5, 7914.0], [72.6, 7914.0], [72.7, 7914.0], [72.8, 7914.0], [72.9, 7914.0], [73.0, 7915.0], [73.1, 7915.0], [73.2, 7915.0], [73.3, 7915.0], [73.4, 7915.0], [73.5, 8170.0], [73.6, 8170.0], [73.7, 8170.0], [73.8, 8170.0], [73.9, 8170.0], [74.0, 8320.0], [74.1, 8320.0], [74.2, 8320.0], [74.3, 8320.0], [74.4, 8320.0], [74.5, 8342.0], [74.6, 8342.0], [74.7, 8342.0], [74.8, 8342.0], [74.9, 8342.0], [75.0, 8354.0], [75.1, 8354.0], [75.2, 8354.0], [75.3, 8354.0], [75.4, 8354.0], [75.5, 8380.0], [75.6, 8380.0], [75.7, 8380.0], [75.8, 8380.0], [75.9, 8380.0], [76.0, 8556.0], [76.1, 8556.0], [76.2, 8556.0], [76.3, 8556.0], [76.4, 8556.0], [76.5, 8587.0], [76.6, 8587.0], [76.7, 8587.0], [76.8, 8587.0], [76.9, 8587.0], [77.0, 8652.0], [77.1, 8652.0], [77.2, 8652.0], [77.3, 8652.0], [77.4, 8652.0], [77.5, 8687.0], [77.6, 8687.0], [77.7, 8687.0], [77.8, 8687.0], [77.9, 8687.0], [78.0, 8875.0], [78.1, 8875.0], [78.2, 8875.0], [78.3, 8875.0], [78.4, 8875.0], [78.5, 8917.0], [78.6, 8917.0], [78.7, 8917.0], [78.8, 8917.0], [78.9, 8917.0], [79.0, 8929.0], [79.1, 8929.0], [79.2, 8929.0], [79.3, 8929.0], [79.4, 8929.0], [79.5, 8977.0], [79.6, 8977.0], [79.7, 8977.0], [79.8, 8977.0], [79.9, 8977.0], [80.0, 9049.0], [80.1, 9049.0], [80.2, 9049.0], [80.3, 9049.0], [80.4, 9049.0], [80.5, 9053.0], [80.6, 9053.0], [80.7, 9053.0], [80.8, 9053.0], [80.9, 9053.0], [81.0, 9059.0], [81.1, 9059.0], [81.2, 9059.0], [81.3, 9059.0], [81.4, 9059.0], [81.5, 9086.0], [81.6, 9086.0], [81.7, 9086.0], [81.8, 9086.0], [81.9, 9086.0], [82.0, 9092.0], [82.1, 9092.0], [82.2, 9092.0], [82.3, 9092.0], [82.4, 9092.0], [82.5, 9105.0], [82.6, 9105.0], [82.7, 9105.0], [82.8, 9105.0], [82.9, 9105.0], [83.0, 9257.0], [83.1, 9257.0], [83.2, 9257.0], [83.3, 9257.0], [83.4, 9257.0], [83.5, 9269.0], [83.6, 9269.0], [83.7, 9269.0], [83.8, 9269.0], [83.9, 9269.0], [84.0, 9317.0], [84.1, 9317.0], [84.2, 9317.0], [84.3, 9317.0], [84.4, 9317.0], [84.5, 9319.0], [84.6, 9319.0], [84.7, 9319.0], [84.8, 9319.0], [84.9, 9319.0], [85.0, 9375.0], [85.1, 9375.0], [85.2, 9375.0], [85.3, 9375.0], [85.4, 9375.0], [85.5, 9450.0], [85.6, 9450.0], [85.7, 9450.0], [85.8, 9450.0], [85.9, 9450.0], [86.0, 9451.0], [86.1, 9451.0], [86.2, 9451.0], [86.3, 9451.0], [86.4, 9451.0], [86.5, 9526.0], [86.6, 9526.0], [86.7, 9526.0], [86.8, 9526.0], [86.9, 9526.0], [87.0, 9526.0], [87.1, 9526.0], [87.2, 9526.0], [87.3, 9526.0], [87.4, 9526.0], [87.5, 9712.0], [87.6, 9712.0], [87.7, 9712.0], [87.8, 9712.0], [87.9, 9712.0], [88.0, 9747.0], [88.1, 9747.0], [88.2, 9747.0], [88.3, 9747.0], [88.4, 9747.0], [88.5, 9783.0], [88.6, 9783.0], [88.7, 9783.0], [88.8, 9783.0], [88.9, 9783.0], [89.0, 9793.0], [89.1, 9793.0], [89.2, 9793.0], [89.3, 9793.0], [89.4, 9793.0], [89.5, 10129.0], [89.6, 10129.0], [89.7, 10129.0], [89.8, 10129.0], [89.9, 10129.0], [90.0, 10285.0], [90.1, 10285.0], [90.2, 10285.0], [90.3, 10285.0], [90.4, 10285.0], [90.5, 10362.0], [90.6, 10362.0], [90.7, 10362.0], [90.8, 10362.0], [90.9, 10362.0], [91.0, 10387.0], [91.1, 10387.0], [91.2, 10387.0], [91.3, 10387.0], [91.4, 10387.0], [91.5, 10431.0], [91.6, 10431.0], [91.7, 10431.0], [91.8, 10431.0], [91.9, 10431.0], [92.0, 10634.0], [92.1, 10634.0], [92.2, 10634.0], [92.3, 10634.0], [92.4, 10634.0], [92.5, 10658.0], [92.6, 10658.0], [92.7, 10658.0], [92.8, 10658.0], [92.9, 10658.0], [93.0, 10717.0], [93.1, 10717.0], [93.2, 10717.0], [93.3, 10717.0], [93.4, 10717.0], [93.5, 10981.0], [93.6, 10981.0], [93.7, 10981.0], [93.8, 10981.0], [93.9, 10981.0], [94.0, 10998.0], [94.1, 10998.0], [94.2, 10998.0], [94.3, 10998.0], [94.4, 10998.0], [94.5, 11104.0], [94.6, 11104.0], [94.7, 11104.0], [94.8, 11104.0], [94.9, 11104.0], [95.0, 11147.0], [95.1, 11147.0], [95.2, 11147.0], [95.3, 11147.0], [95.4, 11147.0], [95.5, 11168.0], [95.6, 11168.0], [95.7, 11168.0], [95.8, 11168.0], [95.9, 11168.0], [96.0, 11201.0], [96.1, 11201.0], [96.2, 11201.0], [96.3, 11201.0], [96.4, 11201.0], [96.5, 11210.0], [96.6, 11210.0], [96.7, 11210.0], [96.8, 11210.0], [96.9, 11210.0], [97.0, 11218.0], [97.1, 11218.0], [97.2, 11218.0], [97.3, 11218.0], [97.4, 11218.0], [97.5, 11306.0], [97.6, 11306.0], [97.7, 11306.0], [97.8, 11306.0], [97.9, 11306.0], [98.0, 11362.0], [98.1, 11362.0], [98.2, 11362.0], [98.3, 11362.0], [98.4, 11362.0], [98.5, 11414.0], [98.6, 11414.0], [98.7, 11414.0], [98.8, 11414.0], [98.9, 11414.0], [99.0, 11599.0], [99.1, 11599.0], [99.2, 11599.0], [99.3, 11599.0], [99.4, 11599.0], [99.5, 11621.0], [99.6, 11621.0], [99.7, 11621.0], [99.8, 11621.0], [99.9, 11621.0]], "isOverall": false, "label": "/api/user/paminnelser", "isController": false}, {"data": [[0.0, 932.0], [0.1, 932.0], [0.2, 932.0], [0.3, 932.0], [0.4, 932.0], [0.5, 944.0], [0.6, 944.0], [0.7, 944.0], [0.8, 944.0], [0.9, 944.0], [1.0, 953.0], [1.1, 953.0], [1.2, 953.0], [1.3, 953.0], [1.4, 953.0], [1.5, 955.0], [1.6, 955.0], [1.7, 955.0], [1.8, 955.0], [1.9, 955.0], [2.0, 962.0], [2.1, 962.0], [2.2, 962.0], [2.3, 962.0], [2.4, 962.0], [2.5, 988.0], [2.6, 988.0], [2.7, 988.0], [2.8, 988.0], [2.9, 988.0], [3.0, 996.0], [3.1, 996.0], [3.2, 996.0], [3.3, 996.0], [3.4, 996.0], [3.5, 997.0], [3.6, 997.0], [3.7, 997.0], [3.8, 997.0], [3.9, 997.0], [4.0, 999.0], [4.1, 999.0], [4.2, 999.0], [4.3, 999.0], [4.4, 999.0], [4.5, 1000.0], [4.6, 1000.0], [4.7, 1000.0], [4.8, 1000.0], [4.9, 1000.0], [5.0, 1121.0], [5.1, 1121.0], [5.2, 1121.0], [5.3, 1121.0], [5.4, 1121.0], [5.5, 1197.0], [5.6, 1197.0], [5.7, 1197.0], [5.8, 1197.0], [5.9, 1197.0], [6.0, 1392.0], [6.1, 1392.0], [6.2, 1392.0], [6.3, 1392.0], [6.4, 1392.0], [6.5, 1633.0], [6.6, 1633.0], [6.7, 1633.0], [6.8, 1633.0], [6.9, 1633.0], [7.0, 1773.0], [7.1, 1773.0], [7.2, 1773.0], [7.3, 1773.0], [7.4, 1773.0], [7.5, 2035.0], [7.6, 2035.0], [7.7, 2035.0], [7.8, 2035.0], [7.9, 2035.0], [8.0, 2078.0], [8.1, 2078.0], [8.2, 2078.0], [8.3, 2078.0], [8.4, 2078.0], [8.5, 2148.0], [8.6, 2148.0], [8.7, 2148.0], [8.8, 2148.0], [8.9, 2148.0], [9.0, 2247.0], [9.1, 2247.0], [9.2, 2247.0], [9.3, 2247.0], [9.4, 2247.0], [9.5, 2282.0], [9.6, 2282.0], [9.7, 2282.0], [9.8, 2282.0], [9.9, 2282.0], [10.0, 2313.0], [10.1, 2313.0], [10.2, 2313.0], [10.3, 2313.0], [10.4, 2313.0], [10.5, 2314.0], [10.6, 2314.0], [10.7, 2314.0], [10.8, 2314.0], [10.9, 2314.0], [11.0, 2321.0], [11.1, 2321.0], [11.2, 2321.0], [11.3, 2321.0], [11.4, 2321.0], [11.5, 2328.0], [11.6, 2328.0], [11.7, 2328.0], [11.8, 2328.0], [11.9, 2328.0], [12.0, 2332.0], [12.1, 2332.0], [12.2, 2332.0], [12.3, 2332.0], [12.4, 2332.0], [12.5, 2338.0], [12.6, 2338.0], [12.7, 2338.0], [12.8, 2338.0], [12.9, 2338.0], [13.0, 2346.0], [13.1, 2346.0], [13.2, 2346.0], [13.3, 2346.0], [13.4, 2346.0], [13.5, 2354.0], [13.6, 2354.0], [13.7, 2354.0], [13.8, 2354.0], [13.9, 2354.0], [14.0, 2356.0], [14.1, 2356.0], [14.2, 2356.0], [14.3, 2356.0], [14.4, 2356.0], [14.5, 2390.0], [14.6, 2390.0], [14.7, 2390.0], [14.8, 2390.0], [14.9, 2390.0], [15.0, 2554.0], [15.1, 2554.0], [15.2, 2554.0], [15.3, 2554.0], [15.4, 2554.0], [15.5, 2704.0], [15.6, 2704.0], [15.7, 2704.0], [15.8, 2704.0], [15.9, 2704.0], [16.0, 2758.0], [16.1, 2758.0], [16.2, 2758.0], [16.3, 2758.0], [16.4, 2758.0], [16.5, 2798.0], [16.6, 2798.0], [16.7, 2798.0], [16.8, 2798.0], [16.9, 2798.0], [17.0, 2834.0], [17.1, 2834.0], [17.2, 2834.0], [17.3, 2834.0], [17.4, 2834.0], [17.5, 2926.0], [17.6, 2926.0], [17.7, 2926.0], [17.8, 2926.0], [17.9, 2926.0], [18.0, 3034.0], [18.1, 3034.0], [18.2, 3034.0], [18.3, 3034.0], [18.4, 3034.0], [18.5, 3077.0], [18.6, 3077.0], [18.7, 3077.0], [18.8, 3077.0], [18.9, 3077.0], [19.0, 3092.0], [19.1, 3092.0], [19.2, 3092.0], [19.3, 3092.0], [19.4, 3092.0], [19.5, 3236.0], [19.6, 3236.0], [19.7, 3236.0], [19.8, 3236.0], [19.9, 3236.0], [20.0, 3246.0], [20.1, 3246.0], [20.2, 3246.0], [20.3, 3246.0], [20.4, 3246.0], [20.5, 3341.0], [20.6, 3341.0], [20.7, 3341.0], [20.8, 3341.0], [20.9, 3341.0], [21.0, 3345.0], [21.1, 3345.0], [21.2, 3345.0], [21.3, 3345.0], [21.4, 3345.0], [21.5, 3453.0], [21.6, 3453.0], [21.7, 3453.0], [21.8, 3453.0], [21.9, 3453.0], [22.0, 3698.0], [22.1, 3698.0], [22.2, 3698.0], [22.3, 3698.0], [22.4, 3698.0], [22.5, 3721.0], [22.6, 3721.0], [22.7, 3721.0], [22.8, 3721.0], [22.9, 3721.0], [23.0, 3778.0], [23.1, 3778.0], [23.2, 3778.0], [23.3, 3778.0], [23.4, 3778.0], [23.5, 3811.0], [23.6, 3811.0], [23.7, 3811.0], [23.8, 3811.0], [23.9, 3811.0], [24.0, 3815.0], [24.1, 3815.0], [24.2, 3815.0], [24.3, 3815.0], [24.4, 3815.0], [24.5, 3830.0], [24.6, 3830.0], [24.7, 3830.0], [24.8, 3830.0], [24.9, 3830.0], [25.0, 3851.0], [25.1, 3851.0], [25.2, 3851.0], [25.3, 3851.0], [25.4, 3851.0], [25.5, 3984.0], [25.6, 3984.0], [25.7, 3984.0], [25.8, 3984.0], [25.9, 3984.0], [26.0, 3993.0], [26.1, 3993.0], [26.2, 3993.0], [26.3, 3993.0], [26.4, 3993.0], [26.5, 3998.0], [26.6, 3998.0], [26.7, 3998.0], [26.8, 3998.0], [26.9, 3998.0], [27.0, 4020.0], [27.1, 4020.0], [27.2, 4020.0], [27.3, 4020.0], [27.4, 4020.0], [27.5, 4143.0], [27.6, 4143.0], [27.7, 4143.0], [27.8, 4143.0], [27.9, 4143.0], [28.0, 4240.0], [28.1, 4240.0], [28.2, 4240.0], [28.3, 4240.0], [28.4, 4240.0], [28.5, 4360.0], [28.6, 4360.0], [28.7, 4360.0], [28.8, 4360.0], [28.9, 4360.0], [29.0, 4401.0], [29.1, 4401.0], [29.2, 4401.0], [29.3, 4401.0], [29.4, 4401.0], [29.5, 4423.0], [29.6, 4423.0], [29.7, 4423.0], [29.8, 4423.0], [29.9, 4423.0], [30.0, 4518.0], [30.1, 4518.0], [30.2, 4518.0], [30.3, 4518.0], [30.4, 4518.0], [30.5, 4519.0], [30.6, 4519.0], [30.7, 4519.0], [30.8, 4519.0], [30.9, 4519.0], [31.0, 4580.0], [31.1, 4580.0], [31.2, 4580.0], [31.3, 4580.0], [31.4, 4580.0], [31.5, 4588.0], [31.6, 4588.0], [31.7, 4588.0], [31.8, 4588.0], [31.9, 4588.0], [32.0, 4658.0], [32.1, 4658.0], [32.2, 4658.0], [32.3, 4658.0], [32.4, 4658.0], [32.5, 4890.0], [32.6, 4890.0], [32.7, 4890.0], [32.8, 4890.0], [32.9, 4890.0], [33.0, 5158.0], [33.1, 5158.0], [33.2, 5158.0], [33.3, 5158.0], [33.4, 5158.0], [33.5, 5232.0], [33.6, 5232.0], [33.7, 5232.0], [33.8, 5232.0], [33.9, 5232.0], [34.0, 5321.0], [34.1, 5321.0], [34.2, 5321.0], [34.3, 5321.0], [34.4, 5321.0], [34.5, 5346.0], [34.6, 5346.0], [34.7, 5346.0], [34.8, 5346.0], [34.9, 5346.0], [35.0, 5353.0], [35.1, 5353.0], [35.2, 5353.0], [35.3, 5353.0], [35.4, 5353.0], [35.5, 5509.0], [35.6, 5509.0], [35.7, 5509.0], [35.8, 5509.0], [35.9, 5509.0], [36.0, 5613.0], [36.1, 5613.0], [36.2, 5613.0], [36.3, 5613.0], [36.4, 5613.0], [36.5, 5825.0], [36.6, 5825.0], [36.7, 5825.0], [36.8, 5825.0], [36.9, 5825.0], [37.0, 5881.0], [37.1, 5881.0], [37.2, 5881.0], [37.3, 5881.0], [37.4, 5881.0], [37.5, 5947.0], [37.6, 5947.0], [37.7, 5947.0], [37.8, 5947.0], [37.9, 5947.0], [38.0, 6001.0], [38.1, 6001.0], [38.2, 6001.0], [38.3, 6001.0], [38.4, 6001.0], [38.5, 6043.0], [38.6, 6043.0], [38.7, 6043.0], [38.8, 6043.0], [38.9, 6043.0], [39.0, 6117.0], [39.1, 6117.0], [39.2, 6117.0], [39.3, 6117.0], [39.4, 6117.0], [39.5, 6168.0], [39.6, 6168.0], [39.7, 6168.0], [39.8, 6168.0], [39.9, 6168.0], [40.0, 6231.0], [40.1, 6231.0], [40.2, 6231.0], [40.3, 6231.0], [40.4, 6231.0], [40.5, 6244.0], [40.6, 6244.0], [40.7, 6244.0], [40.8, 6244.0], [40.9, 6244.0], [41.0, 6388.0], [41.1, 6388.0], [41.2, 6388.0], [41.3, 6388.0], [41.4, 6388.0], [41.5, 6454.0], [41.6, 6454.0], [41.7, 6454.0], [41.8, 6454.0], [41.9, 6454.0], [42.0, 6508.0], [42.1, 6508.0], [42.2, 6508.0], [42.3, 6508.0], [42.4, 6508.0], [42.5, 6509.0], [42.6, 6509.0], [42.7, 6509.0], [42.8, 6509.0], [42.9, 6509.0], [43.0, 6511.0], [43.1, 6511.0], [43.2, 6511.0], [43.3, 6511.0], [43.4, 6511.0], [43.5, 6544.0], [43.6, 6544.0], [43.7, 6544.0], [43.8, 6544.0], [43.9, 6544.0], [44.0, 6697.0], [44.1, 6697.0], [44.2, 6697.0], [44.3, 6697.0], [44.4, 6697.0], [44.5, 6761.0], [44.6, 6761.0], [44.7, 6761.0], [44.8, 6761.0], [44.9, 6761.0], [45.0, 6868.0], [45.1, 6868.0], [45.2, 6868.0], [45.3, 6868.0], [45.4, 6868.0], [45.5, 6926.0], [45.6, 6926.0], [45.7, 6926.0], [45.8, 6926.0], [45.9, 6926.0], [46.0, 7012.0], [46.1, 7012.0], [46.2, 7012.0], [46.3, 7012.0], [46.4, 7012.0], [46.5, 7309.0], [46.6, 7309.0], [46.7, 7309.0], [46.8, 7309.0], [46.9, 7309.0], [47.0, 7371.0], [47.1, 7371.0], [47.2, 7371.0], [47.3, 7371.0], [47.4, 7371.0], [47.5, 7442.0], [47.6, 7442.0], [47.7, 7442.0], [47.8, 7442.0], [47.9, 7442.0], [48.0, 7630.0], [48.1, 7630.0], [48.2, 7630.0], [48.3, 7630.0], [48.4, 7630.0], [48.5, 7734.0], [48.6, 7734.0], [48.7, 7734.0], [48.8, 7734.0], [48.9, 7734.0], [49.0, 7763.0], [49.1, 7763.0], [49.2, 7763.0], [49.3, 7763.0], [49.4, 7763.0], [49.5, 7796.0], [49.6, 7796.0], [49.7, 7796.0], [49.8, 7796.0], [49.9, 7796.0], [50.0, 7851.0], [50.1, 7851.0], [50.2, 7851.0], [50.3, 7851.0], [50.4, 7851.0], [50.5, 7925.0], [50.6, 7925.0], [50.7, 7925.0], [50.8, 7925.0], [50.9, 7925.0], [51.0, 8002.0], [51.1, 8002.0], [51.2, 8002.0], [51.3, 8002.0], [51.4, 8002.0], [51.5, 8220.0], [51.6, 8220.0], [51.7, 8220.0], [51.8, 8220.0], [51.9, 8220.0], [52.0, 8229.0], [52.1, 8229.0], [52.2, 8229.0], [52.3, 8229.0], [52.4, 8229.0], [52.5, 8394.0], [52.6, 8394.0], [52.7, 8394.0], [52.8, 8394.0], [52.9, 8394.0], [53.0, 8605.0], [53.1, 8605.0], [53.2, 8605.0], [53.3, 8605.0], [53.4, 8605.0], [53.5, 8652.0], [53.6, 8652.0], [53.7, 8652.0], [53.8, 8652.0], [53.9, 8652.0], [54.0, 8660.0], [54.1, 8660.0], [54.2, 8660.0], [54.3, 8660.0], [54.4, 8660.0], [54.5, 8667.0], [54.6, 8667.0], [54.7, 8667.0], [54.8, 8667.0], [54.9, 8667.0], [55.0, 8671.0], [55.1, 8671.0], [55.2, 8671.0], [55.3, 8671.0], [55.4, 8671.0], [55.5, 8706.0], [55.6, 8706.0], [55.7, 8706.0], [55.8, 8706.0], [55.9, 8706.0], [56.0, 8806.0], [56.1, 8806.0], [56.2, 8806.0], [56.3, 8806.0], [56.4, 8806.0], [56.5, 8826.0], [56.6, 8826.0], [56.7, 8826.0], [56.8, 8826.0], [56.9, 8826.0], [57.0, 8838.0], [57.1, 8838.0], [57.2, 8838.0], [57.3, 8838.0], [57.4, 8838.0], [57.5, 8900.0], [57.6, 8900.0], [57.7, 8900.0], [57.8, 8900.0], [57.9, 8900.0], [58.0, 8993.0], [58.1, 8993.0], [58.2, 8993.0], [58.3, 8993.0], [58.4, 8993.0], [58.5, 9015.0], [58.6, 9015.0], [58.7, 9015.0], [58.8, 9015.0], [58.9, 9015.0], [59.0, 9030.0], [59.1, 9030.0], [59.2, 9030.0], [59.3, 9030.0], [59.4, 9030.0], [59.5, 9037.0], [59.6, 9037.0], [59.7, 9037.0], [59.8, 9037.0], [59.9, 9037.0], [60.0, 9068.0], [60.1, 9068.0], [60.2, 9068.0], [60.3, 9068.0], [60.4, 9068.0], [60.5, 9116.0], [60.6, 9116.0], [60.7, 9116.0], [60.8, 9116.0], [60.9, 9116.0], [61.0, 9122.0], [61.1, 9122.0], [61.2, 9122.0], [61.3, 9122.0], [61.4, 9122.0], [61.5, 9245.0], [61.6, 9245.0], [61.7, 9245.0], [61.8, 9245.0], [61.9, 9245.0], [62.0, 9300.0], [62.1, 9300.0], [62.2, 9300.0], [62.3, 9300.0], [62.4, 9300.0], [62.5, 9386.0], [62.6, 9386.0], [62.7, 9386.0], [62.8, 9386.0], [62.9, 9386.0], [63.0, 9387.0], [63.1, 9387.0], [63.2, 9387.0], [63.3, 9387.0], [63.4, 9387.0], [63.5, 9408.0], [63.6, 9408.0], [63.7, 9408.0], [63.8, 9408.0], [63.9, 9408.0], [64.0, 9452.0], [64.1, 9452.0], [64.2, 9452.0], [64.3, 9452.0], [64.4, 9452.0], [64.5, 9456.0], [64.6, 9456.0], [64.7, 9456.0], [64.8, 9456.0], [64.9, 9456.0], [65.0, 9909.0], [65.1, 9909.0], [65.2, 9909.0], [65.3, 9909.0], [65.4, 9909.0], [65.5, 10190.0], [65.6, 10190.0], [65.7, 10190.0], [65.8, 10190.0], [65.9, 10190.0], [66.0, 10674.0], [66.1, 10674.0], [66.2, 10674.0], [66.3, 10674.0], [66.4, 10674.0], [66.5, 10813.0], [66.6, 10813.0], [66.7, 10813.0], [66.8, 10813.0], [66.9, 10813.0], [67.0, 10901.0], [67.1, 10901.0], [67.2, 10901.0], [67.3, 10901.0], [67.4, 10901.0], [67.5, 10930.0], [67.6, 10930.0], [67.7, 10930.0], [67.8, 10930.0], [67.9, 10930.0], [68.0, 10943.0], [68.1, 10943.0], [68.2, 10943.0], [68.3, 10943.0], [68.4, 10943.0], [68.5, 11017.0], [68.6, 11017.0], [68.7, 11017.0], [68.8, 11017.0], [68.9, 11017.0], [69.0, 11027.0], [69.1, 11027.0], [69.2, 11027.0], [69.3, 11027.0], [69.4, 11027.0], [69.5, 11132.0], [69.6, 11132.0], [69.7, 11132.0], [69.8, 11132.0], [69.9, 11132.0], [70.0, 11159.0], [70.1, 11159.0], [70.2, 11159.0], [70.3, 11159.0], [70.4, 11159.0], [70.5, 11161.0], [70.6, 11161.0], [70.7, 11161.0], [70.8, 11161.0], [70.9, 11161.0], [71.0, 11171.0], [71.1, 11171.0], [71.2, 11171.0], [71.3, 11171.0], [71.4, 11171.0], [71.5, 11277.0], [71.6, 11277.0], [71.7, 11277.0], [71.8, 11277.0], [71.9, 11277.0], [72.0, 11312.0], [72.1, 11312.0], [72.2, 11312.0], [72.3, 11312.0], [72.4, 11312.0], [72.5, 11313.0], [72.6, 11313.0], [72.7, 11313.0], [72.8, 11313.0], [72.9, 11313.0], [73.0, 11332.0], [73.1, 11332.0], [73.2, 11332.0], [73.3, 11332.0], [73.4, 11332.0], [73.5, 11353.0], [73.6, 11353.0], [73.7, 11353.0], [73.8, 11353.0], [73.9, 11353.0], [74.0, 11376.0], [74.1, 11376.0], [74.2, 11376.0], [74.3, 11376.0], [74.4, 11376.0], [74.5, 11396.0], [74.6, 11396.0], [74.7, 11396.0], [74.8, 11396.0], [74.9, 11396.0], [75.0, 11411.0], [75.1, 11411.0], [75.2, 11411.0], [75.3, 11411.0], [75.4, 11411.0], [75.5, 11416.0], [75.6, 11416.0], [75.7, 11416.0], [75.8, 11416.0], [75.9, 11416.0], [76.0, 11429.0], [76.1, 11429.0], [76.2, 11429.0], [76.3, 11429.0], [76.4, 11429.0], [76.5, 11464.0], [76.6, 11464.0], [76.7, 11464.0], [76.8, 11464.0], [76.9, 11464.0], [77.0, 11493.0], [77.1, 11493.0], [77.2, 11493.0], [77.3, 11493.0], [77.4, 11493.0], [77.5, 11611.0], [77.6, 11611.0], [77.7, 11611.0], [77.8, 11611.0], [77.9, 11611.0], [78.0, 11631.0], [78.1, 11631.0], [78.2, 11631.0], [78.3, 11631.0], [78.4, 11631.0], [78.5, 11705.0], [78.6, 11705.0], [78.7, 11705.0], [78.8, 11705.0], [78.9, 11705.0], [79.0, 11734.0], [79.1, 11734.0], [79.2, 11734.0], [79.3, 11734.0], [79.4, 11734.0], [79.5, 11787.0], [79.6, 11787.0], [79.7, 11787.0], [79.8, 11787.0], [79.9, 11787.0], [80.0, 11791.0], [80.1, 11791.0], [80.2, 11791.0], [80.3, 11791.0], [80.4, 11791.0], [80.5, 11820.0], [80.6, 11820.0], [80.7, 11820.0], [80.8, 11820.0], [80.9, 11820.0], [81.0, 12031.0], [81.1, 12031.0], [81.2, 12031.0], [81.3, 12031.0], [81.4, 12031.0], [81.5, 12068.0], [81.6, 12068.0], [81.7, 12068.0], [81.8, 12068.0], [81.9, 12068.0], [82.0, 12174.0], [82.1, 12174.0], [82.2, 12174.0], [82.3, 12174.0], [82.4, 12174.0], [82.5, 12443.0], [82.6, 12443.0], [82.7, 12443.0], [82.8, 12443.0], [82.9, 12443.0], [83.0, 12518.0], [83.1, 12518.0], [83.2, 12518.0], [83.3, 12518.0], [83.4, 12518.0], [83.5, 12603.0], [83.6, 12603.0], [83.7, 12603.0], [83.8, 12603.0], [83.9, 12603.0], [84.0, 12616.0], [84.1, 12616.0], [84.2, 12616.0], [84.3, 12616.0], [84.4, 12616.0], [84.5, 12750.0], [84.6, 12750.0], [84.7, 12750.0], [84.8, 12750.0], [84.9, 12750.0], [85.0, 12806.0], [85.1, 12806.0], [85.2, 12806.0], [85.3, 12806.0], [85.4, 12806.0], [85.5, 12829.0], [85.6, 12829.0], [85.7, 12829.0], [85.8, 12829.0], [85.9, 12829.0], [86.0, 12909.0], [86.1, 12909.0], [86.2, 12909.0], [86.3, 12909.0], [86.4, 12909.0], [86.5, 12915.0], [86.6, 12915.0], [86.7, 12915.0], [86.8, 12915.0], [86.9, 12915.0], [87.0, 12934.0], [87.1, 12934.0], [87.2, 12934.0], [87.3, 12934.0], [87.4, 12934.0], [87.5, 12990.0], [87.6, 12990.0], [87.7, 12990.0], [87.8, 12990.0], [87.9, 12990.0], [88.0, 13000.0], [88.1, 13000.0], [88.2, 13000.0], [88.3, 13000.0], [88.4, 13000.0], [88.5, 13002.0], [88.6, 13002.0], [88.7, 13002.0], [88.8, 13002.0], [88.9, 13002.0], [89.0, 13005.0], [89.1, 13005.0], [89.2, 13005.0], [89.3, 13005.0], [89.4, 13005.0], [89.5, 13030.0], [89.6, 13030.0], [89.7, 13030.0], [89.8, 13030.0], [89.9, 13030.0], [90.0, 13051.0], [90.1, 13051.0], [90.2, 13051.0], [90.3, 13051.0], [90.4, 13051.0], [90.5, 13071.0], [90.6, 13071.0], [90.7, 13071.0], [90.8, 13071.0], [90.9, 13071.0], [91.0, 13078.0], [91.1, 13078.0], [91.2, 13078.0], [91.3, 13078.0], [91.4, 13078.0], [91.5, 13091.0], [91.6, 13091.0], [91.7, 13091.0], [91.8, 13091.0], [91.9, 13091.0], [92.0, 13128.0], [92.1, 13128.0], [92.2, 13128.0], [92.3, 13128.0], [92.4, 13128.0], [92.5, 13150.0], [92.6, 13150.0], [92.7, 13150.0], [92.8, 13150.0], [92.9, 13150.0], [93.0, 13165.0], [93.1, 13165.0], [93.2, 13165.0], [93.3, 13165.0], [93.4, 13165.0], [93.5, 13351.0], [93.6, 13351.0], [93.7, 13351.0], [93.8, 13351.0], [93.9, 13351.0], [94.0, 13352.0], [94.1, 13352.0], [94.2, 13352.0], [94.3, 13352.0], [94.4, 13352.0], [94.5, 13353.0], [94.6, 13353.0], [94.7, 13353.0], [94.8, 13353.0], [94.9, 13353.0], [95.0, 13409.0], [95.1, 13409.0], [95.2, 13409.0], [95.3, 13409.0], [95.4, 13409.0], [95.5, 13444.0], [95.6, 13444.0], [95.7, 13444.0], [95.8, 13444.0], [95.9, 13444.0], [96.0, 13519.0], [96.1, 13519.0], [96.2, 13519.0], [96.3, 13519.0], [96.4, 13519.0], [96.5, 13627.0], [96.6, 13627.0], [96.7, 13627.0], [96.8, 13627.0], [96.9, 13627.0], [97.0, 13648.0], [97.1, 13648.0], [97.2, 13648.0], [97.3, 13648.0], [97.4, 13648.0], [97.5, 13655.0], [97.6, 13655.0], [97.7, 13655.0], [97.8, 13655.0], [97.9, 13655.0], [98.0, 13735.0], [98.1, 13735.0], [98.2, 13735.0], [98.3, 13735.0], [98.4, 13735.0], [98.5, 13752.0], [98.6, 13752.0], [98.7, 13752.0], [98.8, 13752.0], [98.9, 13752.0], [99.0, 13826.0], [99.1, 13826.0], [99.2, 13826.0], [99.3, 13826.0], [99.4, 13826.0], [99.5, 13866.0], [99.6, 13866.0], [99.7, 13866.0], [99.8, 13866.0], [99.9, 13866.0]], "isOverall": false, "label": "/api/user/user-details", "isController": false}, {"data": [[0.0, 52.0], [0.1, 52.0], [0.2, 52.0], [0.3, 52.0], [0.4, 52.0], [0.5, 62.0], [0.6, 62.0], [0.7, 62.0], [0.8, 62.0], [0.9, 62.0], [1.0, 68.0], [1.1, 68.0], [1.2, 68.0], [1.3, 68.0], [1.4, 68.0], [1.5, 75.0], [1.6, 75.0], [1.7, 75.0], [1.8, 75.0], [1.9, 75.0], [2.0, 76.0], [2.1, 76.0], [2.2, 76.0], [2.3, 76.0], [2.4, 76.0], [2.5, 79.0], [2.6, 79.0], [2.7, 79.0], [2.8, 79.0], [2.9, 79.0], [3.0, 88.0], [3.1, 88.0], [3.2, 88.0], [3.3, 88.0], [3.4, 88.0], [3.5, 99.0], [3.6, 99.0], [3.7, 99.0], [3.8, 99.0], [3.9, 99.0], [4.0, 123.0], [4.1, 123.0], [4.2, 123.0], [4.3, 123.0], [4.4, 123.0], [4.5, 127.0], [4.6, 127.0], [4.7, 127.0], [4.8, 127.0], [4.9, 127.0], [5.0, 130.0], [5.1, 130.0], [5.2, 130.0], [5.3, 130.0], [5.4, 130.0], [5.5, 130.0], [5.6, 130.0], [5.7, 130.0], [5.8, 130.0], [5.9, 130.0], [6.0, 141.0], [6.1, 141.0], [6.2, 141.0], [6.3, 141.0], [6.4, 141.0], [6.5, 142.0], [6.6, 142.0], [6.7, 142.0], [6.8, 142.0], [6.9, 142.0], [7.0, 146.0], [7.1, 146.0], [7.2, 146.0], [7.3, 146.0], [7.4, 146.0], [7.5, 151.0], [7.6, 151.0], [7.7, 151.0], [7.8, 151.0], [7.9, 151.0], [8.0, 152.0], [8.1, 152.0], [8.2, 152.0], [8.3, 152.0], [8.4, 152.0], [8.5, 160.0], [8.6, 160.0], [8.7, 160.0], [8.8, 160.0], [8.9, 160.0], [9.0, 161.0], [9.1, 161.0], [9.2, 161.0], [9.3, 161.0], [9.4, 161.0], [9.5, 191.0], [9.6, 191.0], [9.7, 191.0], [9.8, 191.0], [9.9, 191.0], [10.0, 203.0], [10.1, 203.0], [10.2, 203.0], [10.3, 203.0], [10.4, 203.0], [10.5, 225.0], [10.6, 225.0], [10.7, 225.0], [10.8, 225.0], [10.9, 225.0], [11.0, 229.0], [11.1, 229.0], [11.2, 229.0], [11.3, 229.0], [11.4, 229.0], [11.5, 246.0], [11.6, 246.0], [11.7, 246.0], [11.8, 246.0], [11.9, 246.0], [12.0, 247.0], [12.1, 247.0], [12.2, 247.0], [12.3, 247.0], [12.4, 247.0], [12.5, 249.0], [12.6, 249.0], [12.7, 249.0], [12.8, 249.0], [12.9, 249.0], [13.0, 250.0], [13.1, 250.0], [13.2, 250.0], [13.3, 250.0], [13.4, 250.0], [13.5, 273.0], [13.6, 273.0], [13.7, 273.0], [13.8, 273.0], [13.9, 273.0], [14.0, 278.0], [14.1, 278.0], [14.2, 278.0], [14.3, 278.0], [14.4, 278.0], [14.5, 280.0], [14.6, 280.0], [14.7, 280.0], [14.8, 280.0], [14.9, 280.0], [15.0, 285.0], [15.1, 285.0], [15.2, 285.0], [15.3, 285.0], [15.4, 285.0], [15.5, 285.0], [15.6, 285.0], [15.7, 285.0], [15.8, 285.0], [15.9, 285.0], [16.0, 287.0], [16.1, 287.0], [16.2, 287.0], [16.3, 287.0], [16.4, 287.0], [16.5, 292.0], [16.6, 292.0], [16.7, 292.0], [16.8, 292.0], [16.9, 292.0], [17.0, 295.0], [17.1, 295.0], [17.2, 295.0], [17.3, 295.0], [17.4, 295.0], [17.5, 301.0], [17.6, 301.0], [17.7, 301.0], [17.8, 301.0], [17.9, 301.0], [18.0, 310.0], [18.1, 310.0], [18.2, 310.0], [18.3, 310.0], [18.4, 310.0], [18.5, 312.0], [18.6, 312.0], [18.7, 312.0], [18.8, 312.0], [18.9, 312.0], [19.0, 329.0], [19.1, 329.0], [19.2, 329.0], [19.3, 329.0], [19.4, 329.0], [19.5, 338.0], [19.6, 338.0], [19.7, 338.0], [19.8, 338.0], [19.9, 338.0], [20.0, 347.0], [20.1, 347.0], [20.2, 347.0], [20.3, 347.0], [20.4, 347.0], [20.5, 349.0], [20.6, 349.0], [20.7, 349.0], [20.8, 349.0], [20.9, 349.0], [21.0, 410.0], [21.1, 410.0], [21.2, 410.0], [21.3, 410.0], [21.4, 410.0], [21.5, 430.0], [21.6, 430.0], [21.7, 430.0], [21.8, 430.0], [21.9, 430.0], [22.0, 460.0], [22.1, 460.0], [22.2, 460.0], [22.3, 460.0], [22.4, 460.0], [22.5, 471.0], [22.6, 471.0], [22.7, 471.0], [22.8, 471.0], [22.9, 471.0], [23.0, 499.0], [23.1, 499.0], [23.2, 499.0], [23.3, 499.0], [23.4, 499.0], [23.5, 504.0], [23.6, 504.0], [23.7, 504.0], [23.8, 504.0], [23.9, 504.0], [24.0, 527.0], [24.1, 527.0], [24.2, 527.0], [24.3, 527.0], [24.4, 527.0], [24.5, 532.0], [24.6, 532.0], [24.7, 532.0], [24.8, 532.0], [24.9, 532.0], [25.0, 539.0], [25.1, 539.0], [25.2, 539.0], [25.3, 539.0], [25.4, 539.0], [25.5, 546.0], [25.6, 546.0], [25.7, 546.0], [25.8, 546.0], [25.9, 546.0], [26.0, 554.0], [26.1, 554.0], [26.2, 554.0], [26.3, 554.0], [26.4, 554.0], [26.5, 559.0], [26.6, 559.0], [26.7, 559.0], [26.8, 559.0], [26.9, 559.0], [27.0, 559.0], [27.1, 559.0], [27.2, 559.0], [27.3, 559.0], [27.4, 559.0], [27.5, 564.0], [27.6, 564.0], [27.7, 564.0], [27.8, 564.0], [27.9, 564.0], [28.0, 568.0], [28.1, 568.0], [28.2, 568.0], [28.3, 568.0], [28.4, 568.0], [28.5, 568.0], [28.6, 568.0], [28.7, 568.0], [28.8, 568.0], [28.9, 568.0], [29.0, 571.0], [29.1, 571.0], [29.2, 571.0], [29.3, 571.0], [29.4, 571.0], [29.5, 572.0], [29.6, 572.0], [29.7, 572.0], [29.8, 572.0], [29.9, 572.0], [30.0, 575.0], [30.1, 575.0], [30.2, 575.0], [30.3, 575.0], [30.4, 575.0], [30.5, 581.0], [30.6, 581.0], [30.7, 581.0], [30.8, 581.0], [30.9, 581.0], [31.0, 585.0], [31.1, 585.0], [31.2, 585.0], [31.3, 585.0], [31.4, 585.0], [31.5, 585.0], [31.6, 585.0], [31.7, 585.0], [31.8, 585.0], [31.9, 585.0], [32.0, 588.0], [32.1, 588.0], [32.2, 588.0], [32.3, 588.0], [32.4, 588.0], [32.5, 589.0], [32.6, 589.0], [32.7, 589.0], [32.8, 589.0], [32.9, 589.0], [33.0, 594.0], [33.1, 594.0], [33.2, 594.0], [33.3, 594.0], [33.4, 594.0], [33.5, 597.0], [33.6, 597.0], [33.7, 597.0], [33.8, 597.0], [33.9, 597.0], [34.0, 598.0], [34.1, 598.0], [34.2, 598.0], [34.3, 598.0], [34.4, 598.0], [34.5, 602.0], [34.6, 602.0], [34.7, 602.0], [34.8, 602.0], [34.9, 602.0], [35.0, 602.0], [35.1, 602.0], [35.2, 602.0], [35.3, 602.0], [35.4, 602.0], [35.5, 605.0], [35.6, 605.0], [35.7, 605.0], [35.8, 605.0], [35.9, 605.0], [36.0, 607.0], [36.1, 607.0], [36.2, 607.0], [36.3, 607.0], [36.4, 607.0], [36.5, 612.0], [36.6, 612.0], [36.7, 612.0], [36.8, 612.0], [36.9, 612.0], [37.0, 614.0], [37.1, 614.0], [37.2, 614.0], [37.3, 614.0], [37.4, 614.0], [37.5, 617.0], [37.6, 617.0], [37.7, 617.0], [37.8, 617.0], [37.9, 617.0], [38.0, 620.0], [38.1, 620.0], [38.2, 620.0], [38.3, 620.0], [38.4, 620.0], [38.5, 621.0], [38.6, 621.0], [38.7, 621.0], [38.8, 621.0], [38.9, 621.0], [39.0, 621.0], [39.1, 621.0], [39.2, 621.0], [39.3, 621.0], [39.4, 621.0], [39.5, 623.0], [39.6, 623.0], [39.7, 623.0], [39.8, 623.0], [39.9, 623.0], [40.0, 633.0], [40.1, 633.0], [40.2, 633.0], [40.3, 633.0], [40.4, 633.0], [40.5, 644.0], [40.6, 644.0], [40.7, 644.0], [40.8, 644.0], [40.9, 644.0], [41.0, 648.0], [41.1, 648.0], [41.2, 648.0], [41.3, 648.0], [41.4, 648.0], [41.5, 649.0], [41.6, 649.0], [41.7, 649.0], [41.8, 649.0], [41.9, 649.0], [42.0, 650.0], [42.1, 650.0], [42.2, 650.0], [42.3, 650.0], [42.4, 650.0], [42.5, 654.0], [42.6, 654.0], [42.7, 654.0], [42.8, 654.0], [42.9, 654.0], [43.0, 655.0], [43.1, 655.0], [43.2, 655.0], [43.3, 655.0], [43.4, 655.0], [43.5, 664.0], [43.6, 664.0], [43.7, 664.0], [43.8, 664.0], [43.9, 664.0], [44.0, 666.0], [44.1, 666.0], [44.2, 666.0], [44.3, 666.0], [44.4, 666.0], [44.5, 668.0], [44.6, 668.0], [44.7, 668.0], [44.8, 668.0], [44.9, 668.0], [45.0, 675.0], [45.1, 675.0], [45.2, 675.0], [45.3, 675.0], [45.4, 675.0], [45.5, 675.0], [45.6, 675.0], [45.7, 675.0], [45.8, 675.0], [45.9, 675.0], [46.0, 676.0], [46.1, 676.0], [46.2, 676.0], [46.3, 676.0], [46.4, 676.0], [46.5, 677.0], [46.6, 677.0], [46.7, 677.0], [46.8, 677.0], [46.9, 677.0], [47.0, 678.0], [47.1, 678.0], [47.2, 678.0], [47.3, 678.0], [47.4, 678.0], [47.5, 679.0], [47.6, 679.0], [47.7, 679.0], [47.8, 679.0], [47.9, 679.0], [48.0, 680.0], [48.1, 680.0], [48.2, 680.0], [48.3, 680.0], [48.4, 680.0], [48.5, 683.0], [48.6, 683.0], [48.7, 683.0], [48.8, 683.0], [48.9, 683.0], [49.0, 685.0], [49.1, 685.0], [49.2, 685.0], [49.3, 685.0], [49.4, 685.0], [49.5, 688.0], [49.6, 688.0], [49.7, 688.0], [49.8, 688.0], [49.9, 688.0], [50.0, 688.0], [50.1, 688.0], [50.2, 688.0], [50.3, 688.0], [50.4, 688.0], [50.5, 692.0], [50.6, 692.0], [50.7, 692.0], [50.8, 692.0], [50.9, 692.0], [51.0, 693.0], [51.1, 693.0], [51.2, 693.0], [51.3, 693.0], [51.4, 693.0], [51.5, 698.0], [51.6, 698.0], [51.7, 698.0], [51.8, 698.0], [51.9, 698.0], [52.0, 705.0], [52.1, 705.0], [52.2, 705.0], [52.3, 705.0], [52.4, 705.0], [52.5, 706.0], [52.6, 706.0], [52.7, 706.0], [52.8, 706.0], [52.9, 706.0], [53.0, 707.0], [53.1, 707.0], [53.2, 707.0], [53.3, 707.0], [53.4, 707.0], [53.5, 709.0], [53.6, 709.0], [53.7, 709.0], [53.8, 709.0], [53.9, 709.0], [54.0, 710.0], [54.1, 710.0], [54.2, 710.0], [54.3, 710.0], [54.4, 710.0], [54.5, 711.0], [54.6, 711.0], [54.7, 711.0], [54.8, 711.0], [54.9, 711.0], [55.0, 716.0], [55.1, 716.0], [55.2, 716.0], [55.3, 716.0], [55.4, 716.0], [55.5, 718.0], [55.6, 718.0], [55.7, 718.0], [55.8, 718.0], [55.9, 718.0], [56.0, 718.0], [56.1, 718.0], [56.2, 718.0], [56.3, 718.0], [56.4, 718.0], [56.5, 719.0], [56.6, 719.0], [56.7, 719.0], [56.8, 719.0], [56.9, 719.0], [57.0, 719.0], [57.1, 719.0], [57.2, 719.0], [57.3, 719.0], [57.4, 719.0], [57.5, 722.0], [57.6, 722.0], [57.7, 722.0], [57.8, 722.0], [57.9, 722.0], [58.0, 729.0], [58.1, 729.0], [58.2, 729.0], [58.3, 729.0], [58.4, 729.0], [58.5, 730.0], [58.6, 730.0], [58.7, 730.0], [58.8, 730.0], [58.9, 730.0], [59.0, 731.0], [59.1, 731.0], [59.2, 731.0], [59.3, 731.0], [59.4, 731.0], [59.5, 731.0], [59.6, 731.0], [59.7, 731.0], [59.8, 731.0], [59.9, 731.0], [60.0, 732.0], [60.1, 732.0], [60.2, 732.0], [60.3, 732.0], [60.4, 732.0], [60.5, 733.0], [60.6, 733.0], [60.7, 733.0], [60.8, 733.0], [60.9, 733.0], [61.0, 735.0], [61.1, 735.0], [61.2, 735.0], [61.3, 735.0], [61.4, 735.0], [61.5, 741.0], [61.6, 741.0], [61.7, 741.0], [61.8, 741.0], [61.9, 741.0], [62.0, 743.0], [62.1, 743.0], [62.2, 743.0], [62.3, 743.0], [62.4, 743.0], [62.5, 750.0], [62.6, 750.0], [62.7, 750.0], [62.8, 750.0], [62.9, 750.0], [63.0, 754.0], [63.1, 754.0], [63.2, 754.0], [63.3, 754.0], [63.4, 754.0], [63.5, 759.0], [63.6, 759.0], [63.7, 759.0], [63.8, 759.0], [63.9, 759.0], [64.0, 760.0], [64.1, 760.0], [64.2, 760.0], [64.3, 760.0], [64.4, 760.0], [64.5, 766.0], [64.6, 766.0], [64.7, 766.0], [64.8, 766.0], [64.9, 766.0], [65.0, 773.0], [65.1, 773.0], [65.2, 773.0], [65.3, 773.0], [65.4, 773.0], [65.5, 774.0], [65.6, 774.0], [65.7, 774.0], [65.8, 774.0], [65.9, 774.0], [66.0, 776.0], [66.1, 776.0], [66.2, 776.0], [66.3, 776.0], [66.4, 776.0], [66.5, 777.0], [66.6, 777.0], [66.7, 777.0], [66.8, 777.0], [66.9, 777.0], [67.0, 778.0], [67.1, 778.0], [67.2, 778.0], [67.3, 778.0], [67.4, 778.0], [67.5, 781.0], [67.6, 781.0], [67.7, 781.0], [67.8, 781.0], [67.9, 781.0], [68.0, 789.0], [68.1, 789.0], [68.2, 789.0], [68.3, 789.0], [68.4, 789.0], [68.5, 790.0], [68.6, 790.0], [68.7, 790.0], [68.8, 790.0], [68.9, 790.0], [69.0, 798.0], [69.1, 798.0], [69.2, 798.0], [69.3, 798.0], [69.4, 798.0], [69.5, 803.0], [69.6, 803.0], [69.7, 803.0], [69.8, 803.0], [69.9, 803.0], [70.0, 814.0], [70.1, 814.0], [70.2, 814.0], [70.3, 814.0], [70.4, 814.0], [70.5, 819.0], [70.6, 819.0], [70.7, 819.0], [70.8, 819.0], [70.9, 819.0], [71.0, 820.0], [71.1, 820.0], [71.2, 820.0], [71.3, 820.0], [71.4, 820.0], [71.5, 828.0], [71.6, 828.0], [71.7, 828.0], [71.8, 828.0], [71.9, 828.0], [72.0, 832.0], [72.1, 832.0], [72.2, 832.0], [72.3, 832.0], [72.4, 832.0], [72.5, 838.0], [72.6, 838.0], [72.7, 838.0], [72.8, 838.0], [72.9, 838.0], [73.0, 838.0], [73.1, 838.0], [73.2, 838.0], [73.3, 838.0], [73.4, 838.0], [73.5, 845.0], [73.6, 845.0], [73.7, 845.0], [73.8, 845.0], [73.9, 845.0], [74.0, 845.0], [74.1, 845.0], [74.2, 845.0], [74.3, 845.0], [74.4, 845.0], [74.5, 850.0], [74.6, 850.0], [74.7, 850.0], [74.8, 850.0], [74.9, 850.0], [75.0, 855.0], [75.1, 855.0], [75.2, 855.0], [75.3, 855.0], [75.4, 855.0], [75.5, 857.0], [75.6, 857.0], [75.7, 857.0], [75.8, 857.0], [75.9, 857.0], [76.0, 863.0], [76.1, 863.0], [76.2, 863.0], [76.3, 863.0], [76.4, 863.0], [76.5, 863.0], [76.6, 863.0], [76.7, 863.0], [76.8, 863.0], [76.9, 863.0], [77.0, 878.0], [77.1, 878.0], [77.2, 878.0], [77.3, 878.0], [77.4, 878.0], [77.5, 880.0], [77.6, 880.0], [77.7, 880.0], [77.8, 880.0], [77.9, 880.0], [78.0, 880.0], [78.1, 880.0], [78.2, 880.0], [78.3, 880.0], [78.4, 880.0], [78.5, 885.0], [78.6, 885.0], [78.7, 885.0], [78.8, 885.0], [78.9, 885.0], [79.0, 885.0], [79.1, 885.0], [79.2, 885.0], [79.3, 885.0], [79.4, 885.0], [79.5, 887.0], [79.6, 887.0], [79.7, 887.0], [79.8, 887.0], [79.9, 887.0], [80.0, 899.0], [80.1, 899.0], [80.2, 899.0], [80.3, 899.0], [80.4, 899.0], [80.5, 910.0], [80.6, 910.0], [80.7, 910.0], [80.8, 910.0], [80.9, 910.0], [81.0, 935.0], [81.1, 935.0], [81.2, 935.0], [81.3, 935.0], [81.4, 935.0], [81.5, 936.0], [81.6, 936.0], [81.7, 936.0], [81.8, 936.0], [81.9, 936.0], [82.0, 938.0], [82.1, 938.0], [82.2, 938.0], [82.3, 938.0], [82.4, 938.0], [82.5, 939.0], [82.6, 939.0], [82.7, 939.0], [82.8, 939.0], [82.9, 939.0], [83.0, 996.0], [83.1, 996.0], [83.2, 996.0], [83.3, 996.0], [83.4, 996.0], [83.5, 1017.0], [83.6, 1017.0], [83.7, 1017.0], [83.8, 1017.0], [83.9, 1017.0], [84.0, 1054.0], [84.1, 1054.0], [84.2, 1054.0], [84.3, 1054.0], [84.4, 1054.0], [84.5, 1054.0], [84.6, 1054.0], [84.7, 1054.0], [84.8, 1054.0], [84.9, 1054.0], [85.0, 1081.0], [85.1, 1081.0], [85.2, 1081.0], [85.3, 1081.0], [85.4, 1081.0], [85.5, 1117.0], [85.6, 1117.0], [85.7, 1117.0], [85.8, 1117.0], [85.9, 1117.0], [86.0, 1200.0], [86.1, 1200.0], [86.2, 1200.0], [86.3, 1200.0], [86.4, 1200.0], [86.5, 1294.0], [86.6, 1294.0], [86.7, 1294.0], [86.8, 1294.0], [86.9, 1294.0], [87.0, 1349.0], [87.1, 1349.0], [87.2, 1349.0], [87.3, 1349.0], [87.4, 1349.0], [87.5, 1491.0], [87.6, 1491.0], [87.7, 1491.0], [87.8, 1491.0], [87.9, 1491.0], [88.0, 1500.0], [88.1, 1500.0], [88.2, 1500.0], [88.3, 1500.0], [88.4, 1500.0], [88.5, 1518.0], [88.6, 1518.0], [88.7, 1518.0], [88.8, 1518.0], [88.9, 1518.0], [89.0, 1629.0], [89.1, 1629.0], [89.2, 1629.0], [89.3, 1629.0], [89.4, 1629.0], [89.5, 1707.0], [89.6, 1707.0], [89.7, 1707.0], [89.8, 1707.0], [89.9, 1707.0], [90.0, 1838.0], [90.1, 1838.0], [90.2, 1838.0], [90.3, 1838.0], [90.4, 1838.0], [90.5, 2027.0], [90.6, 2027.0], [90.7, 2027.0], [90.8, 2027.0], [90.9, 2027.0], [91.0, 2061.0], [91.1, 2061.0], [91.2, 2061.0], [91.3, 2061.0], [91.4, 2061.0], [91.5, 2137.0], [91.6, 2137.0], [91.7, 2137.0], [91.8, 2137.0], [91.9, 2137.0], [92.0, 2154.0], [92.1, 2154.0], [92.2, 2154.0], [92.3, 2154.0], [92.4, 2154.0], [92.5, 2155.0], [92.6, 2155.0], [92.7, 2155.0], [92.8, 2155.0], [92.9, 2155.0], [93.0, 3698.0], [93.1, 3698.0], [93.2, 3698.0], [93.3, 3698.0], [93.4, 3698.0], [93.5, 3847.0], [93.6, 3847.0], [93.7, 3847.0], [93.8, 3847.0], [93.9, 3847.0], [94.0, 3951.0], [94.1, 3951.0], [94.2, 3951.0], [94.3, 3951.0], [94.4, 3951.0], [94.5, 4312.0], [94.6, 4312.0], [94.7, 4312.0], [94.8, 4312.0], [94.9, 4312.0], [95.0, 6176.0], [95.1, 6176.0], [95.2, 6176.0], [95.3, 6176.0], [95.4, 6176.0], [95.5, 6217.0], [95.6, 6217.0], [95.7, 6217.0], [95.8, 6217.0], [95.9, 6217.0], [96.0, 8906.0], [96.1, 8906.0], [96.2, 8906.0], [96.3, 8906.0], [96.4, 8906.0], [96.5, 8942.0], [96.6, 8942.0], [96.7, 8942.0], [96.8, 8942.0], [96.9, 8942.0], [97.0, 9121.0], [97.1, 9121.0], [97.2, 9121.0], [97.3, 9121.0], [97.4, 9121.0], [97.5, 9527.0], [97.6, 9527.0], [97.7, 9527.0], [97.8, 9527.0], [97.9, 9527.0], [98.0, 10366.0], [98.1, 10366.0], [98.2, 10366.0], [98.3, 10366.0], [98.4, 10366.0], [98.5, 11117.0], [98.6, 11117.0], [98.7, 11117.0], [98.8, 11117.0], [98.9, 11117.0], [99.0, 11147.0], [99.1, 11147.0], [99.2, 11147.0], [99.3, 11147.0], [99.4, 11147.0], [99.5, 11157.0], [99.6, 11157.0], [99.7, 11157.0], [99.8, 11157.0], [99.9, 11157.0]], "isOverall": false, "label": " /api/meddelande", "isController": false}, {"data": [[0.0, 7.0], [0.1, 7.0], [0.2, 7.0], [0.3, 7.0], [0.4, 7.0], [0.5, 8.0], [0.6, 8.0], [0.7, 8.0], [0.8, 8.0], [0.9, 8.0], [1.0, 8.0], [1.1, 8.0], [1.2, 8.0], [1.3, 8.0], [1.4, 8.0], [1.5, 9.0], [1.6, 9.0], [1.7, 9.0], [1.8, 9.0], [1.9, 9.0], [2.0, 10.0], [2.1, 10.0], [2.2, 10.0], [2.3, 10.0], [2.4, 10.0], [2.5, 11.0], [2.6, 11.0], [2.7, 11.0], [2.8, 11.0], [2.9, 11.0], [3.0, 11.0], [3.1, 11.0], [3.2, 11.0], [3.3, 11.0], [3.4, 11.0], [3.5, 13.0], [3.6, 13.0], [3.7, 13.0], [3.8, 13.0], [3.9, 13.0], [4.0, 14.0], [4.1, 14.0], [4.2, 14.0], [4.3, 14.0], [4.4, 14.0], [4.5, 15.0], [4.6, 15.0], [4.7, 15.0], [4.8, 15.0], [4.9, 15.0], [5.0, 15.0], [5.1, 15.0], [5.2, 15.0], [5.3, 15.0], [5.4, 15.0], [5.5, 15.0], [5.6, 15.0], [5.7, 15.0], [5.8, 15.0], [5.9, 15.0], [6.0, 17.0], [6.1, 17.0], [6.2, 17.0], [6.3, 17.0], [6.4, 17.0], [6.5, 23.0], [6.6, 23.0], [6.7, 23.0], [6.8, 23.0], [6.9, 23.0], [7.0, 38.0], [7.1, 38.0], [7.2, 38.0], [7.3, 38.0], [7.4, 38.0], [7.5, 39.0], [7.6, 39.0], [7.7, 39.0], [7.8, 39.0], [7.9, 39.0], [8.0, 39.0], [8.1, 39.0], [8.2, 39.0], [8.3, 39.0], [8.4, 39.0], [8.5, 39.0], [8.6, 39.0], [8.7, 39.0], [8.8, 39.0], [8.9, 39.0], [9.0, 40.0], [9.1, 40.0], [9.2, 40.0], [9.3, 40.0], [9.4, 40.0], [9.5, 40.0], [9.6, 40.0], [9.7, 40.0], [9.8, 40.0], [9.9, 40.0], [10.0, 41.0], [10.1, 41.0], [10.2, 41.0], [10.3, 41.0], [10.4, 41.0], [10.5, 44.0], [10.6, 44.0], [10.7, 44.0], [10.8, 44.0], [10.9, 44.0], [11.0, 44.0], [11.1, 44.0], [11.2, 44.0], [11.3, 44.0], [11.4, 44.0], [11.5, 45.0], [11.6, 45.0], [11.7, 45.0], [11.8, 45.0], [11.9, 45.0], [12.0, 48.0], [12.1, 48.0], [12.2, 48.0], [12.3, 48.0], [12.4, 48.0], [12.5, 50.0], [12.6, 50.0], [12.7, 50.0], [12.8, 50.0], [12.9, 50.0], [13.0, 55.0], [13.1, 55.0], [13.2, 55.0], [13.3, 55.0], [13.4, 55.0], [13.5, 57.0], [13.6, 57.0], [13.7, 57.0], [13.8, 57.0], [13.9, 57.0], [14.0, 58.0], [14.1, 58.0], [14.2, 58.0], [14.3, 58.0], [14.4, 58.0], [14.5, 60.0], [14.6, 60.0], [14.7, 60.0], [14.8, 60.0], [14.9, 60.0], [15.0, 61.0], [15.1, 61.0], [15.2, 61.0], [15.3, 61.0], [15.4, 61.0], [15.5, 62.0], [15.6, 62.0], [15.7, 62.0], [15.8, 62.0], [15.9, 62.0], [16.0, 66.0], [16.1, 66.0], [16.2, 66.0], [16.3, 66.0], [16.4, 66.0], [16.5, 69.0], [16.6, 69.0], [16.7, 69.0], [16.8, 69.0], [16.9, 69.0], [17.0, 75.0], [17.1, 75.0], [17.2, 75.0], [17.3, 75.0], [17.4, 75.0], [17.5, 75.0], [17.6, 75.0], [17.7, 75.0], [17.8, 75.0], [17.9, 75.0], [18.0, 80.0], [18.1, 80.0], [18.2, 80.0], [18.3, 80.0], [18.4, 80.0], [18.5, 82.0], [18.6, 82.0], [18.7, 82.0], [18.8, 82.0], [18.9, 82.0], [19.0, 89.0], [19.1, 89.0], [19.2, 89.0], [19.3, 89.0], [19.4, 89.0], [19.5, 90.0], [19.6, 90.0], [19.7, 90.0], [19.8, 90.0], [19.9, 90.0], [20.0, 91.0], [20.1, 91.0], [20.2, 91.0], [20.3, 91.0], [20.4, 91.0], [20.5, 92.0], [20.6, 92.0], [20.7, 92.0], [20.8, 92.0], [20.9, 92.0], [21.0, 99.0], [21.1, 99.0], [21.2, 99.0], [21.3, 99.0], [21.4, 99.0], [21.5, 100.0], [21.6, 100.0], [21.7, 100.0], [21.8, 100.0], [21.9, 100.0], [22.0, 102.0], [22.1, 102.0], [22.2, 102.0], [22.3, 102.0], [22.4, 102.0], [22.5, 107.0], [22.6, 107.0], [22.7, 107.0], [22.8, 107.0], [22.9, 107.0], [23.0, 108.0], [23.1, 108.0], [23.2, 108.0], [23.3, 108.0], [23.4, 108.0], [23.5, 110.0], [23.6, 110.0], [23.7, 110.0], [23.8, 110.0], [23.9, 110.0], [24.0, 114.0], [24.1, 114.0], [24.2, 114.0], [24.3, 114.0], [24.4, 114.0], [24.5, 118.0], [24.6, 118.0], [24.7, 118.0], [24.8, 118.0], [24.9, 118.0], [25.0, 118.0], [25.1, 118.0], [25.2, 118.0], [25.3, 118.0], [25.4, 118.0], [25.5, 120.0], [25.6, 120.0], [25.7, 120.0], [25.8, 120.0], [25.9, 120.0], [26.0, 120.0], [26.1, 120.0], [26.2, 120.0], [26.3, 120.0], [26.4, 120.0], [26.5, 120.0], [26.6, 120.0], [26.7, 120.0], [26.8, 120.0], [26.9, 120.0], [27.0, 121.0], [27.1, 121.0], [27.2, 121.0], [27.3, 121.0], [27.4, 121.0], [27.5, 123.0], [27.6, 123.0], [27.7, 123.0], [27.8, 123.0], [27.9, 123.0], [28.0, 123.0], [28.1, 123.0], [28.2, 123.0], [28.3, 123.0], [28.4, 123.0], [28.5, 123.0], [28.6, 123.0], [28.7, 123.0], [28.8, 123.0], [28.9, 123.0], [29.0, 126.0], [29.1, 126.0], [29.2, 126.0], [29.3, 126.0], [29.4, 126.0], [29.5, 129.0], [29.6, 129.0], [29.7, 129.0], [29.8, 129.0], [29.9, 129.0], [30.0, 129.0], [30.1, 129.0], [30.2, 129.0], [30.3, 129.0], [30.4, 129.0], [30.5, 130.0], [30.6, 130.0], [30.7, 130.0], [30.8, 130.0], [30.9, 130.0], [31.0, 131.0], [31.1, 131.0], [31.2, 131.0], [31.3, 131.0], [31.4, 131.0], [31.5, 134.0], [31.6, 134.0], [31.7, 134.0], [31.8, 134.0], [31.9, 134.0], [32.0, 135.0], [32.1, 135.0], [32.2, 135.0], [32.3, 135.0], [32.4, 135.0], [32.5, 136.0], [32.6, 136.0], [32.7, 136.0], [32.8, 136.0], [32.9, 136.0], [33.0, 137.0], [33.1, 137.0], [33.2, 137.0], [33.3, 137.0], [33.4, 137.0], [33.5, 139.0], [33.6, 139.0], [33.7, 139.0], [33.8, 139.0], [33.9, 139.0], [34.0, 139.0], [34.1, 139.0], [34.2, 139.0], [34.3, 139.0], [34.4, 139.0], [34.5, 139.0], [34.6, 139.0], [34.7, 139.0], [34.8, 139.0], [34.9, 139.0], [35.0, 141.0], [35.1, 141.0], [35.2, 141.0], [35.3, 141.0], [35.4, 141.0], [35.5, 142.0], [35.6, 142.0], [35.7, 142.0], [35.8, 142.0], [35.9, 142.0], [36.0, 142.0], [36.1, 142.0], [36.2, 142.0], [36.3, 142.0], [36.4, 142.0], [36.5, 143.0], [36.6, 143.0], [36.7, 143.0], [36.8, 143.0], [36.9, 143.0], [37.0, 143.0], [37.1, 143.0], [37.2, 143.0], [37.3, 143.0], [37.4, 143.0], [37.5, 143.0], [37.6, 143.0], [37.7, 143.0], [37.8, 143.0], [37.9, 143.0], [38.0, 144.0], [38.1, 144.0], [38.2, 144.0], [38.3, 144.0], [38.4, 144.0], [38.5, 146.0], [38.6, 146.0], [38.7, 146.0], [38.8, 146.0], [38.9, 146.0], [39.0, 146.0], [39.1, 146.0], [39.2, 146.0], [39.3, 146.0], [39.4, 146.0], [39.5, 147.0], [39.6, 147.0], [39.7, 147.0], [39.8, 147.0], [39.9, 147.0], [40.0, 151.0], [40.1, 151.0], [40.2, 151.0], [40.3, 151.0], [40.4, 151.0], [40.5, 152.0], [40.6, 152.0], [40.7, 152.0], [40.8, 152.0], [40.9, 152.0], [41.0, 153.0], [41.1, 153.0], [41.2, 153.0], [41.3, 153.0], [41.4, 153.0], [41.5, 155.0], [41.6, 155.0], [41.7, 155.0], [41.8, 155.0], [41.9, 155.0], [42.0, 155.0], [42.1, 155.0], [42.2, 155.0], [42.3, 155.0], [42.4, 155.0], [42.5, 159.0], [42.6, 159.0], [42.7, 159.0], [42.8, 159.0], [42.9, 159.0], [43.0, 160.0], [43.1, 160.0], [43.2, 160.0], [43.3, 160.0], [43.4, 160.0], [43.5, 160.0], [43.6, 160.0], [43.7, 160.0], [43.8, 160.0], [43.9, 160.0], [44.0, 166.0], [44.1, 166.0], [44.2, 166.0], [44.3, 166.0], [44.4, 166.0], [44.5, 167.0], [44.6, 167.0], [44.7, 167.0], [44.8, 167.0], [44.9, 167.0], [45.0, 168.0], [45.1, 168.0], [45.2, 168.0], [45.3, 168.0], [45.4, 168.0], [45.5, 170.0], [45.6, 170.0], [45.7, 170.0], [45.8, 170.0], [45.9, 170.0], [46.0, 170.0], [46.1, 170.0], [46.2, 170.0], [46.3, 170.0], [46.4, 170.0], [46.5, 172.0], [46.6, 172.0], [46.7, 172.0], [46.8, 172.0], [46.9, 172.0], [47.0, 172.0], [47.1, 172.0], [47.2, 172.0], [47.3, 172.0], [47.4, 172.0], [47.5, 176.0], [47.6, 176.0], [47.7, 176.0], [47.8, 176.0], [47.9, 176.0], [48.0, 176.0], [48.1, 176.0], [48.2, 176.0], [48.3, 176.0], [48.4, 176.0], [48.5, 181.0], [48.6, 181.0], [48.7, 181.0], [48.8, 181.0], [48.9, 181.0], [49.0, 182.0], [49.1, 182.0], [49.2, 182.0], [49.3, 182.0], [49.4, 182.0], [49.5, 187.0], [49.6, 187.0], [49.7, 187.0], [49.8, 187.0], [49.9, 187.0], [50.0, 188.0], [50.1, 188.0], [50.2, 188.0], [50.3, 188.0], [50.4, 188.0], [50.5, 189.0], [50.6, 189.0], [50.7, 189.0], [50.8, 189.0], [50.9, 189.0], [51.0, 190.0], [51.1, 190.0], [51.2, 190.0], [51.3, 190.0], [51.4, 190.0], [51.5, 191.0], [51.6, 191.0], [51.7, 191.0], [51.8, 191.0], [51.9, 191.0], [52.0, 192.0], [52.1, 192.0], [52.2, 192.0], [52.3, 192.0], [52.4, 192.0], [52.5, 193.0], [52.6, 193.0], [52.7, 193.0], [52.8, 193.0], [52.9, 193.0], [53.0, 194.0], [53.1, 194.0], [53.2, 194.0], [53.3, 194.0], [53.4, 194.0], [53.5, 195.0], [53.6, 195.0], [53.7, 195.0], [53.8, 195.0], [53.9, 195.0], [54.0, 200.0], [54.1, 200.0], [54.2, 200.0], [54.3, 200.0], [54.4, 200.0], [54.5, 201.0], [54.6, 201.0], [54.7, 201.0], [54.8, 201.0], [54.9, 201.0], [55.0, 207.0], [55.1, 207.0], [55.2, 207.0], [55.3, 207.0], [55.4, 207.0], [55.5, 207.0], [55.6, 207.0], [55.7, 207.0], [55.8, 207.0], [55.9, 207.0], [56.0, 208.0], [56.1, 208.0], [56.2, 208.0], [56.3, 208.0], [56.4, 208.0], [56.5, 208.0], [56.6, 208.0], [56.7, 208.0], [56.8, 208.0], [56.9, 208.0], [57.0, 210.0], [57.1, 210.0], [57.2, 210.0], [57.3, 210.0], [57.4, 210.0], [57.5, 210.0], [57.6, 210.0], [57.7, 210.0], [57.8, 210.0], [57.9, 210.0], [58.0, 211.0], [58.1, 211.0], [58.2, 211.0], [58.3, 211.0], [58.4, 211.0], [58.5, 213.0], [58.6, 213.0], [58.7, 213.0], [58.8, 213.0], [58.9, 213.0], [59.0, 214.0], [59.1, 214.0], [59.2, 214.0], [59.3, 214.0], [59.4, 214.0], [59.5, 215.0], [59.6, 215.0], [59.7, 215.0], [59.8, 215.0], [59.9, 215.0], [60.0, 215.0], [60.1, 215.0], [60.2, 215.0], [60.3, 215.0], [60.4, 215.0], [60.5, 218.0], [60.6, 218.0], [60.7, 218.0], [60.8, 218.0], [60.9, 218.0], [61.0, 219.0], [61.1, 219.0], [61.2, 219.0], [61.3, 219.0], [61.4, 219.0], [61.5, 220.0], [61.6, 220.0], [61.7, 220.0], [61.8, 220.0], [61.9, 220.0], [62.0, 220.0], [62.1, 220.0], [62.2, 220.0], [62.3, 220.0], [62.4, 220.0], [62.5, 220.0], [62.6, 220.0], [62.7, 220.0], [62.8, 220.0], [62.9, 220.0], [63.0, 222.0], [63.1, 222.0], [63.2, 222.0], [63.3, 222.0], [63.4, 222.0], [63.5, 225.0], [63.6, 225.0], [63.7, 225.0], [63.8, 225.0], [63.9, 225.0], [64.0, 230.0], [64.1, 230.0], [64.2, 230.0], [64.3, 230.0], [64.4, 230.0], [64.5, 230.0], [64.6, 230.0], [64.7, 230.0], [64.8, 230.0], [64.9, 230.0], [65.0, 231.0], [65.1, 231.0], [65.2, 231.0], [65.3, 231.0], [65.4, 231.0], [65.5, 231.0], [65.6, 231.0], [65.7, 231.0], [65.8, 231.0], [65.9, 231.0], [66.0, 233.0], [66.1, 233.0], [66.2, 233.0], [66.3, 233.0], [66.4, 233.0], [66.5, 236.0], [66.6, 236.0], [66.7, 236.0], [66.8, 236.0], [66.9, 236.0], [67.0, 236.0], [67.1, 236.0], [67.2, 236.0], [67.3, 236.0], [67.4, 236.0], [67.5, 237.0], [67.6, 237.0], [67.7, 237.0], [67.8, 237.0], [67.9, 237.0], [68.0, 237.0], [68.1, 237.0], [68.2, 237.0], [68.3, 237.0], [68.4, 237.0], [68.5, 238.0], [68.6, 238.0], [68.7, 238.0], [68.8, 238.0], [68.9, 238.0], [69.0, 241.0], [69.1, 241.0], [69.2, 241.0], [69.3, 241.0], [69.4, 241.0], [69.5, 243.0], [69.6, 243.0], [69.7, 243.0], [69.8, 243.0], [69.9, 243.0], [70.0, 245.0], [70.1, 245.0], [70.2, 245.0], [70.3, 245.0], [70.4, 245.0], [70.5, 246.0], [70.6, 246.0], [70.7, 246.0], [70.8, 246.0], [70.9, 246.0], [71.0, 246.0], [71.1, 246.0], [71.2, 246.0], [71.3, 246.0], [71.4, 246.0], [71.5, 248.0], [71.6, 248.0], [71.7, 248.0], [71.8, 248.0], [71.9, 248.0], [72.0, 249.0], [72.1, 249.0], [72.2, 249.0], [72.3, 249.0], [72.4, 249.0], [72.5, 249.0], [72.6, 249.0], [72.7, 249.0], [72.8, 249.0], [72.9, 249.0], [73.0, 252.0], [73.1, 252.0], [73.2, 252.0], [73.3, 252.0], [73.4, 252.0], [73.5, 253.0], [73.6, 253.0], [73.7, 253.0], [73.8, 253.0], [73.9, 253.0], [74.0, 254.0], [74.1, 254.0], [74.2, 254.0], [74.3, 254.0], [74.4, 254.0], [74.5, 254.0], [74.6, 254.0], [74.7, 254.0], [74.8, 254.0], [74.9, 254.0], [75.0, 254.0], [75.1, 254.0], [75.2, 254.0], [75.3, 254.0], [75.4, 254.0], [75.5, 256.0], [75.6, 256.0], [75.7, 256.0], [75.8, 256.0], [75.9, 256.0], [76.0, 259.0], [76.1, 259.0], [76.2, 259.0], [76.3, 259.0], [76.4, 259.0], [76.5, 260.0], [76.6, 260.0], [76.7, 260.0], [76.8, 260.0], [76.9, 260.0], [77.0, 263.0], [77.1, 263.0], [77.2, 263.0], [77.3, 263.0], [77.4, 263.0], [77.5, 263.0], [77.6, 263.0], [77.7, 263.0], [77.8, 263.0], [77.9, 263.0], [78.0, 264.0], [78.1, 264.0], [78.2, 264.0], [78.3, 264.0], [78.4, 264.0], [78.5, 265.0], [78.6, 265.0], [78.7, 265.0], [78.8, 265.0], [78.9, 265.0], [79.0, 268.0], [79.1, 268.0], [79.2, 268.0], [79.3, 268.0], [79.4, 268.0], [79.5, 268.0], [79.6, 268.0], [79.7, 268.0], [79.8, 268.0], [79.9, 268.0], [80.0, 269.0], [80.1, 269.0], [80.2, 269.0], [80.3, 269.0], [80.4, 269.0], [80.5, 269.0], [80.6, 269.0], [80.7, 269.0], [80.8, 269.0], [80.9, 269.0], [81.0, 281.0], [81.1, 281.0], [81.2, 281.0], [81.3, 281.0], [81.4, 281.0], [81.5, 284.0], [81.6, 284.0], [81.7, 284.0], [81.8, 284.0], [81.9, 284.0], [82.0, 288.0], [82.1, 288.0], [82.2, 288.0], [82.3, 288.0], [82.4, 288.0], [82.5, 291.0], [82.6, 291.0], [82.7, 291.0], [82.8, 291.0], [82.9, 291.0], [83.0, 294.0], [83.1, 294.0], [83.2, 294.0], [83.3, 294.0], [83.4, 294.0], [83.5, 306.0], [83.6, 306.0], [83.7, 306.0], [83.8, 306.0], [83.9, 306.0], [84.0, 306.0], [84.1, 306.0], [84.2, 306.0], [84.3, 306.0], [84.4, 306.0], [84.5, 309.0], [84.6, 309.0], [84.7, 309.0], [84.8, 309.0], [84.9, 309.0], [85.0, 314.0], [85.1, 314.0], [85.2, 314.0], [85.3, 314.0], [85.4, 314.0], [85.5, 329.0], [85.6, 329.0], [85.7, 329.0], [85.8, 329.0], [85.9, 329.0], [86.0, 329.0], [86.1, 329.0], [86.2, 329.0], [86.3, 329.0], [86.4, 329.0], [86.5, 341.0], [86.6, 341.0], [86.7, 341.0], [86.8, 341.0], [86.9, 341.0], [87.0, 350.0], [87.1, 350.0], [87.2, 350.0], [87.3, 350.0], [87.4, 350.0], [87.5, 351.0], [87.6, 351.0], [87.7, 351.0], [87.8, 351.0], [87.9, 351.0], [88.0, 351.0], [88.1, 351.0], [88.2, 351.0], [88.3, 351.0], [88.4, 351.0], [88.5, 357.0], [88.6, 357.0], [88.7, 357.0], [88.8, 357.0], [88.9, 357.0], [89.0, 379.0], [89.1, 379.0], [89.2, 379.0], [89.3, 379.0], [89.4, 379.0], [89.5, 399.0], [89.6, 399.0], [89.7, 399.0], [89.8, 399.0], [89.9, 399.0], [90.0, 418.0], [90.1, 418.0], [90.2, 418.0], [90.3, 418.0], [90.4, 418.0], [90.5, 471.0], [90.6, 471.0], [90.7, 471.0], [90.8, 471.0], [90.9, 471.0], [91.0, 492.0], [91.1, 492.0], [91.2, 492.0], [91.3, 492.0], [91.4, 492.0], [91.5, 551.0], [91.6, 551.0], [91.7, 551.0], [91.8, 551.0], [91.9, 551.0], [92.0, 570.0], [92.1, 570.0], [92.2, 570.0], [92.3, 570.0], [92.4, 570.0], [92.5, 584.0], [92.6, 584.0], [92.7, 584.0], [92.8, 584.0], [92.9, 584.0], [93.0, 588.0], [93.1, 588.0], [93.2, 588.0], [93.3, 588.0], [93.4, 588.0], [93.5, 599.0], [93.6, 599.0], [93.7, 599.0], [93.8, 599.0], [93.9, 599.0], [94.0, 599.0], [94.1, 599.0], [94.2, 599.0], [94.3, 599.0], [94.4, 599.0], [94.5, 602.0], [94.6, 602.0], [94.7, 602.0], [94.8, 602.0], [94.9, 602.0], [95.0, 606.0], [95.1, 606.0], [95.2, 606.0], [95.3, 606.0], [95.4, 606.0], [95.5, 655.0], [95.6, 655.0], [95.7, 655.0], [95.8, 655.0], [95.9, 655.0], [96.0, 655.0], [96.1, 655.0], [96.2, 655.0], [96.3, 655.0], [96.4, 655.0], [96.5, 666.0], [96.6, 666.0], [96.7, 666.0], [96.8, 666.0], [96.9, 666.0], [97.0, 669.0], [97.1, 669.0], [97.2, 669.0], [97.3, 669.0], [97.4, 669.0], [97.5, 717.0], [97.6, 717.0], [97.7, 717.0], [97.8, 717.0], [97.9, 717.0], [98.0, 734.0], [98.1, 734.0], [98.2, 734.0], [98.3, 734.0], [98.4, 734.0], [98.5, 742.0], [98.6, 742.0], [98.7, 742.0], [98.8, 742.0], [98.9, 742.0], [99.0, 820.0], [99.1, 820.0], [99.2, 820.0], [99.3, 820.0], [99.4, 820.0], [99.5, 916.0], [99.6, 916.0], [99.7, 916.0], [99.8, 916.0], [99.9, 916.0]], "isOverall": false, "label": " /api/user/matvarden/ogranskade", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "maxY": 20.0, "series": [{"data": [[190.0, 2.0], [240.0, 4.0], [260.0, 2.0], [310.0, 2.0], [320.0, 2.0], [340.0, 4.0], [370.0, 2.0], [420.0, 2.0], [450.0, 2.0], [470.0, 4.0], [570.0, 2.0], [590.0, 2.0], [600.0, 4.0], [620.0, 2.0], [610.0, 4.0], [680.0, 4.0], [690.0, 2.0], [720.0, 4.0], [740.0, 6.0], [760.0, 2.0], [830.0, 2.0], [810.0, 2.0], [1070.0, 4.0], [1160.0, 2.0], [1300.0, 2.0], [1330.0, 2.0], [1290.0, 2.0], [1390.0, 2.0], [1380.0, 2.0], [1440.0, 2.0], [1420.0, 2.0], [1460.0, 2.0], [1470.0, 2.0], [1480.0, 2.0], [1530.0, 4.0], [1550.0, 2.0], [1570.0, 2.0], [1600.0, 2.0], [1630.0, 2.0], [1610.0, 4.0], [1660.0, 2.0], [1620.0, 2.0], [1640.0, 2.0], [1670.0, 2.0], [1740.0, 2.0], [1810.0, 2.0], [1850.0, 2.0], [1860.0, 4.0], [1880.0, 4.0], [1870.0, 2.0], [1910.0, 2.0], [1920.0, 2.0], [1960.0, 2.0], [2000.0, 2.0], [2030.0, 2.0], [2170.0, 2.0], [2100.0, 2.0], [2230.0, 2.0], [2510.0, 2.0], [2660.0, 2.0], [2690.0, 2.0], [2770.0, 2.0], [2830.0, 2.0], [3190.0, 4.0], [3170.0, 2.0], [3210.0, 2.0], [3220.0, 2.0], [3360.0, 2.0], [3590.0, 2.0], [3710.0, 4.0], [3820.0, 2.0], [3870.0, 2.0], [3860.0, 4.0], [3970.0, 4.0], [3980.0, 2.0], [4000.0, 2.0], [4040.0, 2.0], [4020.0, 4.0], [4180.0, 2.0], [4220.0, 2.0], [4210.0, 2.0], [4230.0, 2.0], [4360.0, 2.0], [4780.0, 2.0], [4760.0, 2.0], [5070.0, 2.0], [4960.0, 2.0], [5280.0, 2.0], [5130.0, 2.0], [5160.0, 2.0], [5430.0, 2.0], [5400.0, 2.0], [5590.0, 2.0], [5830.0, 2.0], [5870.0, 2.0], [5660.0, 4.0], [5880.0, 2.0], [5960.0, 2.0], [5930.0, 2.0], [6050.0, 2.0], [6340.0, 2.0], [6330.0, 2.0], [6380.0, 4.0], [6290.0, 2.0], [6630.0, 2.0], [6460.0, 2.0], [6650.0, 2.0], [6770.0, 2.0], [6870.0, 2.0], [7040.0, 2.0], [7130.0, 2.0], [7060.0, 4.0], [7160.0, 4.0], [7120.0, 2.0], [6940.0, 2.0], [7420.0, 2.0], [7240.0, 2.0], [7400.0, 2.0], [7350.0, 2.0], [7570.0, 2.0], [7540.0, 2.0], [7910.0, 4.0], [7900.0, 2.0], [8170.0, 2.0], [8580.0, 2.0], [8550.0, 2.0], [8650.0, 2.0], [8380.0, 2.0], [8350.0, 2.0], [8320.0, 2.0], [8340.0, 2.0], [8680.0, 2.0], [8970.0, 2.0], [8870.0, 2.0], [9050.0, 4.0], [9040.0, 2.0], [9090.0, 2.0], [9080.0, 2.0], [9100.0, 2.0], [8920.0, 2.0], [8910.0, 2.0], [9310.0, 4.0], [9520.0, 4.0], [9450.0, 4.0], [9250.0, 2.0], [9370.0, 2.0], [9260.0, 2.0], [9710.0, 2.0], [10120.0, 2.0], [9740.0, 2.0], [9780.0, 2.0], [9790.0, 2.0], [10280.0, 2.0], [10710.0, 2.0], [10630.0, 2.0], [10650.0, 2.0], [10360.0, 2.0], [10430.0, 2.0], [10380.0, 2.0], [11210.0, 4.0], [11100.0, 2.0], [11140.0, 2.0], [11200.0, 2.0], [10980.0, 2.0], [11160.0, 2.0], [10990.0, 2.0], [11620.0, 2.0], [11360.0, 2.0], [11300.0, 2.0], [11410.0, 2.0], [11590.0, 2.0]], "isOverall": false, "label": "/api/user/paminnelser", "isController": false}, {"data": [[930.0, 2.0], [940.0, 2.0], [950.0, 4.0], [960.0, 2.0], [980.0, 2.0], [990.0, 6.0], [1000.0, 2.0], [1120.0, 2.0], [1190.0, 2.0], [1390.0, 2.0], [1630.0, 2.0], [1770.0, 2.0], [2030.0, 2.0], [2070.0, 2.0], [2140.0, 2.0], [2240.0, 2.0], [2280.0, 2.0], [2310.0, 4.0], [2320.0, 4.0], [2330.0, 4.0], [2350.0, 4.0], [2340.0, 2.0], [2390.0, 2.0], [2550.0, 2.0], [2700.0, 2.0], [2750.0, 2.0], [2790.0, 2.0], [2830.0, 2.0], [2920.0, 2.0], [3030.0, 2.0], [3070.0, 2.0], [3090.0, 2.0], [3230.0, 2.0], [3240.0, 2.0], [3340.0, 4.0], [3450.0, 2.0], [3690.0, 2.0], [3720.0, 2.0], [3770.0, 2.0], [3810.0, 4.0], [3830.0, 2.0], [3850.0, 2.0], [3990.0, 4.0], [3980.0, 2.0], [4020.0, 2.0], [4140.0, 2.0], [4240.0, 2.0], [4360.0, 2.0], [4400.0, 2.0], [4510.0, 4.0], [4580.0, 4.0], [4420.0, 2.0], [4650.0, 2.0], [4890.0, 2.0], [5150.0, 2.0], [5340.0, 2.0], [5320.0, 2.0], [5230.0, 2.0], [5350.0, 2.0], [5500.0, 2.0], [5610.0, 2.0], [5820.0, 2.0], [5880.0, 2.0], [5940.0, 2.0], [6110.0, 2.0], [6000.0, 2.0], [6040.0, 2.0], [6240.0, 2.0], [6380.0, 2.0], [6230.0, 2.0], [6160.0, 2.0], [6450.0, 2.0], [6510.0, 2.0], [6500.0, 4.0], [6540.0, 2.0], [6690.0, 2.0], [6860.0, 2.0], [6760.0, 2.0], [6920.0, 2.0], [7010.0, 2.0], [7300.0, 2.0], [7370.0, 2.0], [7440.0, 2.0], [7630.0, 2.0], [7760.0, 2.0], [7790.0, 2.0], [7730.0, 2.0], [7850.0, 2.0], [7920.0, 2.0], [8000.0, 2.0], [8220.0, 4.0], [8390.0, 2.0], [8660.0, 4.0], [8670.0, 2.0], [8600.0, 2.0], [8650.0, 2.0], [8700.0, 2.0], [9110.0, 2.0], [9010.0, 2.0], [8900.0, 2.0], [9030.0, 4.0], [8830.0, 2.0], [9060.0, 2.0], [8820.0, 2.0], [9120.0, 2.0], [8990.0, 2.0], [8800.0, 2.0], [9450.0, 4.0], [9240.0, 2.0], [9380.0, 4.0], [9400.0, 2.0], [9300.0, 2.0], [9900.0, 2.0], [10190.0, 2.0], [10670.0, 2.0], [10810.0, 2.0], [11170.0, 2.0], [10900.0, 2.0], [10940.0, 2.0], [10930.0, 2.0], [11010.0, 2.0], [11160.0, 2.0], [11150.0, 2.0], [11130.0, 2.0], [11020.0, 2.0], [11330.0, 2.0], [11270.0, 2.0], [11310.0, 4.0], [11490.0, 2.0], [11460.0, 2.0], [11610.0, 2.0], [11630.0, 2.0], [11420.0, 2.0], [11370.0, 2.0], [11700.0, 2.0], [11730.0, 2.0], [11390.0, 2.0], [11350.0, 2.0], [11410.0, 4.0], [11780.0, 2.0], [11790.0, 2.0], [12170.0, 2.0], [12060.0, 2.0], [11820.0, 2.0], [12030.0, 2.0], [12440.0, 2.0], [12510.0, 2.0], [12600.0, 2.0], [12750.0, 2.0], [12610.0, 2.0], [12800.0, 2.0], [12910.0, 2.0], [13090.0, 2.0], [12820.0, 2.0], [12900.0, 2.0], [13000.0, 6.0], [12990.0, 2.0], [12930.0, 2.0], [13120.0, 2.0], [13150.0, 2.0], [13160.0, 2.0], [13050.0, 2.0], [13030.0, 2.0], [13070.0, 4.0], [13400.0, 2.0], [13350.0, 6.0], [13640.0, 2.0], [13620.0, 2.0], [13510.0, 2.0], [13820.0, 2.0], [13750.0, 2.0], [13730.0, 2.0], [13440.0, 2.0], [13650.0, 2.0], [13860.0, 2.0]], "isOverall": false, "label": "/api/user/user-details", "isController": false}, {"data": [[50.0, 2.0], [60.0, 4.0], [70.0, 6.0], [80.0, 2.0], [90.0, 2.0], [120.0, 4.0], [130.0, 4.0], [140.0, 6.0], [150.0, 4.0], [160.0, 4.0], [190.0, 2.0], [200.0, 2.0], [220.0, 4.0], [240.0, 6.0], [250.0, 2.0], [270.0, 4.0], [280.0, 8.0], [290.0, 4.0], [300.0, 2.0], [310.0, 4.0], [320.0, 2.0], [330.0, 2.0], [340.0, 4.0], [410.0, 2.0], [430.0, 2.0], [460.0, 2.0], [470.0, 2.0], [490.0, 2.0], [500.0, 2.0], [520.0, 2.0], [530.0, 4.0], [540.0, 2.0], [550.0, 6.0], [560.0, 6.0], [570.0, 6.0], [600.0, 8.0], [590.0, 6.0], [580.0, 10.0], [610.0, 6.0], [620.0, 8.0], [630.0, 2.0], [640.0, 6.0], [650.0, 6.0], [660.0, 6.0], [670.0, 12.0], [690.0, 6.0], [680.0, 10.0], [700.0, 8.0], [710.0, 14.0], [730.0, 12.0], [720.0, 4.0], [750.0, 6.0], [740.0, 4.0], [760.0, 4.0], [770.0, 10.0], [790.0, 4.0], [780.0, 4.0], [830.0, 6.0], [810.0, 4.0], [820.0, 4.0], [800.0, 2.0], [860.0, 4.0], [850.0, 6.0], [840.0, 4.0], [880.0, 10.0], [870.0, 2.0], [890.0, 2.0], [910.0, 2.0], [930.0, 8.0], [990.0, 2.0], [1010.0, 2.0], [1050.0, 4.0], [1080.0, 2.0], [1110.0, 2.0], [1200.0, 2.0], [1340.0, 2.0], [1290.0, 2.0], [1500.0, 2.0], [1490.0, 2.0], [1510.0, 2.0], [1620.0, 2.0], [1700.0, 2.0], [1830.0, 2.0], [2020.0, 2.0], [2150.0, 4.0], [2060.0, 2.0], [2130.0, 2.0], [3690.0, 2.0], [3840.0, 2.0], [3950.0, 2.0], [4310.0, 2.0], [6170.0, 2.0], [6210.0, 2.0], [8900.0, 2.0], [9120.0, 2.0], [8940.0, 2.0], [9520.0, 2.0], [10360.0, 2.0], [11140.0, 2.0], [11110.0, 2.0], [11150.0, 2.0]], "isOverall": false, "label": " /api/meddelande", "isController": false}, {"data": [[0.0, 8.0], [550.0, 2.0], [570.0, 2.0], [590.0, 4.0], [600.0, 4.0], [580.0, 4.0], [660.0, 4.0], [650.0, 4.0], [710.0, 2.0], [730.0, 2.0], [740.0, 2.0], [820.0, 2.0], [910.0, 2.0], [10.0, 18.0], [20.0, 2.0], [30.0, 8.0], [40.0, 14.0], [50.0, 8.0], [60.0, 10.0], [70.0, 4.0], [80.0, 6.0], [90.0, 8.0], [100.0, 8.0], [110.0, 8.0], [120.0, 20.0], [130.0, 18.0], [140.0, 20.0], [150.0, 12.0], [160.0, 10.0], [170.0, 12.0], [180.0, 10.0], [190.0, 12.0], [200.0, 12.0], [210.0, 18.0], [220.0, 10.0], [230.0, 20.0], [240.0, 16.0], [250.0, 14.0], [260.0, 18.0], [280.0, 6.0], [290.0, 4.0], [300.0, 6.0], [310.0, 2.0], [320.0, 4.0], [340.0, 2.0], [350.0, 8.0], [370.0, 2.0], [390.0, 2.0], [410.0, 2.0], [470.0, 2.0], [490.0, 2.0]], "isOverall": false, "label": " /api/user/matvarden/ogranskade", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10, "maxX": 13860.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 382.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 732.0, "series": [{"data": [[0.0, 486.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 382.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 732.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 131.22541966426866, "minX": 1.591957309E12, "maxY": 200.0, "series": [{"data": [[1.591957318E12, 200.0], [1.591957319E12, 200.0], [1.59195732E12, 200.0], [1.591957321E12, 200.0], [1.591957322E12, 199.71428571428564], [1.591957313E12, 200.0], [1.591957314E12, 200.0], [1.591957315E12, 200.0], [1.591957316E12, 200.0], [1.591957317E12, 200.0], [1.591957309E12, 197.3], [1.59195731E12, 200.0], [1.591957311E12, 200.0], [1.591957312E12, 200.0], [1.591957323E12, 131.22541966426866]], "isOverall": false, "label": "Efter Inloggning", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.591957323E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 7.0, "minX": 1.0, "maxY": 13735.0, "series": [{"data": [[96.0, 241.0], [103.0, 346.0], [123.0, 602.0], [122.0, 378.0], [135.0, 600.0], [132.0, 316.0], [128.0, 343.0], [148.0, 244.0], [144.0, 428.0], [159.0, 358.5], [164.0, 721.0], [163.0, 474.0], [171.0, 190.0], [183.0, 930.0], [182.0, 616.0], [181.0, 688.0], [191.0, 1938.5], [190.0, 2104.0], [189.0, 1073.75], [186.0, 812.0], [199.0, 4819.82857142857], [198.0, 1530.0], [197.0, 958.0], [195.0, 1075.5], [194.0, 693.0], [193.0, 1546.0], [200.0, 6168.95384615385]], "isOverall": false, "label": "/api/user/paminnelser", "isController": false}, {"data": [[194.55, 5007.190000000001]], "isOverall": false, "label": "/api/user/paminnelser-Aggregated", "isController": false}, {"data": [[191.0, 932.0], [189.0, 13627.0], [193.0, 944.0], [195.0, 955.0], [196.0, 10915.400000000001], [198.0, 9523.666666666666], [199.0, 13357.999999999998], [197.0, 13735.0], [200.0, 7356.370165745859]], "isOverall": false, "label": "/api/user/user-details", "isController": false}, {"data": [[199.66499999999996, 7624.9599999999955]], "isOverall": false, "label": "/api/user/user-details-Aggregated", "isController": false}, {"data": [[9.0, 130.0], [20.0, 214.0], [21.0, 79.0], [22.0, 88.0], [26.0, 435.5], [27.0, 99.0], [41.0, 123.0], [42.0, 156.0], [66.0, 250.0], [71.0, 229.0], [73.0, 172.0], [79.0, 273.0], [82.0, 288.66666666666663], [90.0, 490.0], [89.0, 454.0], [88.0, 616.25], [95.0, 295.0], [98.0, 410.0], [100.0, 130.0], [107.0, 719.0], [104.0, 312.0], [108.0, 612.0], [122.0, 719.0], [135.0, 783.0], [133.0, 773.0], [132.0, 868.75], [130.0, 795.0], [129.0, 899.0], [128.0, 770.25], [143.0, 505.0], [140.0, 556.3333333333334], [139.0, 403.5], [149.0, 369.49999999999994], [148.0, 347.0], [147.0, 349.0], [144.0, 845.0], [156.0, 614.0], [155.0, 1534.6666666666665], [154.0, 819.0], [153.0, 191.0], [166.0, 789.0], [164.0, 354.5], [163.0, 943.7499999999999], [162.0, 247.0], [173.0, 581.0], [172.0, 471.49999999999994], [171.0, 676.0], [183.0, 541.5], [182.0, 484.00000000000006], [181.0, 605.0], [178.0, 655.0], [177.0, 589.0], [176.0, 278.0], [191.0, 707.8], [190.0, 678.0], [189.0, 947.4705882352941], [188.0, 747.0], [187.0, 1011.5000000000002], [186.0, 781.0], [185.0, 973.3333333333333], [184.0, 760.0], [199.0, 1012.1666666666666], [198.0, 653.6666666666667], [197.0, 749.0], [196.0, 684.4166666666667], [195.0, 629.3333333333334], [194.0, 666.0], [193.0, 1077.9], [192.0, 675.0], [200.0, 7452.357142857143]], "isOverall": false, "label": " /api/meddelande", "isController": false}, {"data": [[160.89500000000004, 1172.025000000001]], "isOverall": false, "label": " /api/meddelande-Aggregated", "isController": false}, {"data": [[2.0, 10.0], [3.0, 7.0], [4.0, 8.0], [6.0, 9.5], [8.0, 10.0], [9.0, 40.0], [14.0, 14.666666666666666], [16.0, 71.75], [18.0, 50.5], [20.0, 57.5], [21.0, 45.0], [22.0, 351.0], [24.0, 353.5], [25.0, 39.0], [26.0, 82.0], [27.0, 75.0], [31.0, 132.5], [34.0, 69.0], [37.0, 149.33333333333334], [39.0, 114.0], [41.0, 92.66666666666667], [43.0, 314.0], [42.0, 15.0], [44.0, 107.0], [47.0, 118.0], [46.0, 112.5], [49.0, 151.5], [51.0, 86.0], [55.0, 127.66666666666666], [54.0, 190.0], [58.0, 172.0], [61.0, 39.0], [60.0, 66.5], [62.0, 131.0], [66.0, 136.5], [64.0, 120.0], [71.0, 236.0], [70.0, 136.75], [75.0, 295.0], [73.0, 231.0], [79.0, 245.0], [76.0, 306.0], [83.0, 306.0], [82.0, 147.5], [81.0, 253.0], [85.0, 269.0], [84.0, 263.0], [91.0, 263.0], [90.0, 61.0], [89.0, 222.0], [88.0, 242.33333333333334], [95.0, 108.0], [94.0, 120.0], [93.0, 399.0], [92.0, 120.0], [98.0, 220.5], [96.0, 291.0], [103.0, 185.0], [100.0, 195.5], [107.0, 187.66666666666666], [104.0, 166.0], [111.0, 143.0], [110.0, 418.0], [108.0, 120.0], [115.0, 154.66666666666669], [112.0, 161.5], [119.0, 153.0], [123.0, 172.0], [122.0, 155.5], [121.0, 916.0], [124.0, 155.0], [135.0, 182.5], [133.0, 200.0], [132.0, 499.5], [130.0, 379.0], [129.0, 201.0], [128.0, 254.99999999999997], [143.0, 212.0], [140.0, 284.0], [139.0, 329.0], [138.0, 139.0], [137.0, 111.5], [151.0, 191.0], [150.0, 208.0], [149.0, 341.0], [148.0, 220.0], [147.0, 98.0], [144.0, 207.0], [159.0, 211.0], [158.0, 220.0], [156.0, 218.0], [155.0, 213.0], [154.0, 214.0], [153.0, 208.0], [152.0, 215.0], [166.0, 230.0], [165.0, 231.0], [163.0, 219.0], [162.0, 244.0], [175.0, 249.0], [174.0, 249.0], [173.0, 606.0], [172.0, 245.0], [171.0, 354.0], [170.0, 236.5], [168.0, 235.5], [183.0, 570.0], [182.0, 193.0], [181.0, 259.0], [180.0, 256.0], [179.0, 268.0], [178.0, 135.0], [177.0, 254.0], [176.0, 254.0], [191.0, 820.0], [190.0, 492.0], [189.0, 742.0], [188.0, 717.0], [187.0, 187.0], [186.0, 588.0], [185.0, 143.0], [184.0, 584.0], [199.0, 551.0], [198.0, 599.0], [197.0, 599.0], [196.0, 602.0], [195.0, 666.0], [194.0, 655.0], [193.0, 669.0], [192.0, 655.0], [200.0, 192.0], [1.0, 13.0]], "isOverall": false, "label": " /api/user/matvarden/ogranskade", "isController": false}, {"data": [[101.09999999999991, 214.14499999999992]], "isOverall": false, "label": " /api/user/matvarden/ogranskade-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 200.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 2010.0, "minX": 1.591957309E12, "maxY": 577212.0, "series": [{"data": [[1.591957318E12, 28836.0], [1.591957319E12, 5910.0], [1.59195732E12, 29076.0], [1.591957321E12, 26220.0], [1.591957322E12, 183174.0], [1.591957313E12, 21036.0], [1.591957314E12, 10638.0], [1.591957315E12, 22458.0], [1.591957316E12, 15600.0], [1.591957317E12, 8274.0], [1.591957309E12, 11820.0], [1.59195731E12, 7092.0], [1.591957311E12, 22218.0], [1.591957312E12, 13236.0], [1.591957323E12, 577212.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.591957318E12, 10868.0], [1.591957319E12, 2010.0], [1.59195732E12, 10154.0], [1.591957321E12, 13426.0], [1.591957322E12, 90150.0], [1.591957313E12, 7950.0], [1.591957314E12, 3618.0], [1.591957315E12, 7638.0], [1.591957316E12, 5836.0], [1.591957317E12, 2814.0], [1.591957309E12, 4020.0], [1.59195731E12, 2412.0], [1.591957311E12, 8352.0], [1.591957312E12, 5032.0], [1.591957323E12, 216520.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.591957323E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 192.0, "minX": 1.591957309E12, "maxY": 13574.374999999996, "series": [{"data": [[1.591957318E12, 8483.25], [1.59195732E12, 9053.0], [1.591957321E12, 6050.941176470587], [1.591957311E12, 1441.3333333333335], [1.591957322E12, 6042.786259541985], [1.591957312E12, 2505.0], [1.591957323E12, 864.7567567567564], [1.591957313E12, 3324.3333333333335], [1.591957316E12, 6339.0]], "isOverall": false, "label": "/api/user/paminnelser", "isController": false}, {"data": [[1.591957318E12, 8977.409090909092], [1.591957319E12, 9923.199999999999], [1.59195732E12, 11282.66666666667], [1.591957321E12, 12063.666666666666], [1.591957322E12, 13115.478260869564], [1.591957313E12, 3904.1874999999995], [1.591957314E12, 4711.222222222223], [1.591957315E12, 6020.210526315789], [1.591957316E12, 7132.5], [1.591957317E12, 8050.714285714285], [1.591957309E12, 972.6000000000001], [1.59195731E12, 1525.1666666666665], [1.591957311E12, 2427.7058823529405], [1.591957312E12, 3072.8999999999996], [1.591957323E12, 13574.374999999996]], "isOverall": false, "label": "/api/user/user-details", "isController": false}, {"data": [[1.591957322E12, 4367.148148148149], [1.591957323E12, 673.364161849711]], "isOverall": false, "label": " /api/meddelande", "isController": false}, {"data": [[1.591957322E12, 192.0], [1.591957323E12, 214.25628140703506]], "isOverall": false, "label": " /api/user/matvarden/ogranskade", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.591957323E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 192.0, "minX": 1.591957309E12, "maxY": 13574.374999999996, "series": [{"data": [[1.591957318E12, 8482.999999999998], [1.59195732E12, 9053.0], [1.591957321E12, 6050.823529411765], [1.591957311E12, 1441.0], [1.591957322E12, 6042.709923664126], [1.591957312E12, 2505.0], [1.591957323E12, 864.7297297297297], [1.591957313E12, 3324.3333333333335], [1.591957316E12, 6339.0]], "isOverall": false, "label": "/api/user/paminnelser", "isController": false}, {"data": [[1.591957318E12, 8977.409090909092], [1.591957319E12, 9923.0], [1.59195732E12, 11271.041666666664], [1.591957321E12, 12063.583333333334], [1.591957322E12, 13115.478260869564], [1.591957313E12, 3904.0624999999995], [1.591957314E12, 4711.000000000001], [1.591957315E12, 6020.210526315789], [1.591957316E12, 7131.833333333334], [1.591957317E12, 8050.571428571428], [1.591957309E12, 972.5], [1.59195731E12, 1525.1666666666665], [1.591957311E12, 2427.7058823529405], [1.591957312E12, 3072.8999999999996], [1.591957323E12, 13574.374999999996]], "isOverall": false, "label": "/api/user/user-details", "isController": false}, {"data": [[1.591957322E12, 4350.962962962963], [1.591957323E12, 673.3352601156065]], "isOverall": false, "label": " /api/meddelande", "isController": false}, {"data": [[1.591957322E12, 192.0], [1.591957323E12, 214.1859296482412]], "isOverall": false, "label": " /api/user/matvarden/ogranskade", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.591957323E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.591957309E12, "maxY": 51.0, "series": [{"data": [[1.591957318E12, 0.0], [1.59195732E12, 7.0], [1.591957321E12, 6.23529411764706], [1.591957311E12, 0.0], [1.591957322E12, 6.48091603053435], [1.591957312E12, 0.0], [1.591957323E12, 6.648648648648648], [1.591957313E12, 0.0], [1.591957316E12, 0.0]], "isOverall": false, "label": "/api/user/paminnelser", "isController": false}, {"data": [[1.591957318E12, 6.818181818181818], [1.591957319E12, 6.6], [1.59195732E12, 6.833333333333333], [1.591957321E12, 6.416666666666668], [1.591957322E12, 6.782608695652172], [1.591957313E12, 6.6875], [1.591957314E12, 6.222222222222221], [1.591957315E12, 6.473684210526315], [1.591957316E12, 8.083333333333336], [1.591957317E12, 6.571428571428571], [1.591957309E12, 51.0], [1.59195731E12, 45.5], [1.591957311E12, 41.117647058823536], [1.591957312E12, 11.100000000000001], [1.591957323E12, 7.250000000000002]], "isOverall": false, "label": "/api/user/user-details", "isController": false}, {"data": [[1.591957322E12, 5.888888888888888], [1.591957323E12, 3.924855491329476]], "isOverall": false, "label": " /api/meddelande", "isController": false}, {"data": [[1.591957322E12, 6.0], [1.591957323E12, 1.3115577889447234]], "isOverall": false, "label": " /api/user/matvarden/ogranskade", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.591957323E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 7.0, "minX": 1.591957309E12, "maxY": 13866.0, "series": [{"data": [[1.591957318E12, 9452.0], [1.591957319E12, 10674.0], [1.59195732E12, 11787.0], [1.591957321E12, 12806.0], [1.591957322E12, 13826.0], [1.591957313E12, 4519.0], [1.591957314E12, 5346.0], [1.591957315E12, 6697.0], [1.591957316E12, 7796.0], [1.591957317E12, 8394.0], [1.591957309E12, 1000.0], [1.59195731E12, 2035.0], [1.591957311E12, 2926.0], [1.591957312E12, 3778.0], [1.591957323E12, 13866.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.591957318E12, 7915.0], [1.591957319E12, 9387.0], [1.59195732E12, 9053.0], [1.591957321E12, 1309.0], [1.591957322E12, 161.0], [1.591957313E12, 3191.0], [1.591957314E12, 4240.0], [1.591957315E12, 5232.0], [1.591957316E12, 6168.0], [1.591957317E12, 7734.0], [1.591957309E12, 932.0], [1.59195731E12, 1121.0], [1.591957311E12, 1395.0], [1.591957312E12, 2178.0], [1.591957323E12, 7.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.591957318E12, 8856.5], [1.591957319E12, 9030.0], [1.59195732E12, 11145.5], [1.591957321E12, 11390.0], [1.591957322E12, 11602.6], [1.591957313E12, 3993.0], [1.591957314E12, 4518.0], [1.591957315E12, 6043.0], [1.591957316E12, 6697.0], [1.591957317E12, 7371.0], [1.591957309E12, 999.9], [1.59195731E12, 1773.0], [1.591957311E12, 2704.0], [1.591957312E12, 3092.0], [1.591957323E12, 10941.7]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.591957318E12, 9414.599999999999], [1.591957319E12, 10214.200000000006], [1.59195732E12, 11705.0], [1.591957321E12, 12600.449999999997], [1.591957322E12, 13409.0], [1.591957313E12, 4519.0], [1.591957314E12, 5346.0], [1.591957315E12, 6697.0], [1.591957316E12, 7789.7300000000005], [1.591957317E12, 8339.549999999997], [1.591957309E12, 1000.0], [1.59195731E12, 2035.0], [1.591957311E12, 2926.0], [1.591957312E12, 3778.0], [1.591957323E12, 13518.25]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.591957318E12, 9104.0], [1.591957319E12, 9386.25], [1.59195732E12, 11396.0], [1.591957321E12, 11779.049999999997], [1.591957322E12, 12912.9], [1.591957313E12, 4197.25], [1.591957314E12, 4658.0], [1.591957315E12, 6454.0], [1.591957316E12, 7312.0999999999985], [1.591957317E12, 7851.0], [1.591957309E12, 1000.0], [1.59195731E12, 2035.0], [1.591957311E12, 2834.0], [1.591957312E12, 3397.999999999997], [1.591957323E12, 11790.8]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.591957323E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 146.0, "minX": 2000.0, "maxY": 4234.0, "series": [{"data": [[10000.0, 146.0], [6000.0, 681.0], [12000.0, 161.0], [2000.0, 4234.0], [4000.0, 763.5], [8000.0, 252.5], [16000.0, 607.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1, "maxX": 16000.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 146.0, "minX": 2000.0, "maxY": 4234.0, "series": [{"data": [[10000.0, 146.0], [6000.0, 680.5], [12000.0, 161.0], [2000.0, 4234.0], [4000.0, 763.5], [8000.0, 252.5], [16000.0, 607.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1, "maxX": 16000.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 10.0, "minX": 1.591957308E12, "maxY": 436.0, "series": [{"data": [[1.591957318E12, 52.0], [1.591957319E12, 10.0], [1.59195732E12, 50.0], [1.591957321E12, 58.0], [1.591957322E12, 362.0], [1.591957313E12, 38.0], [1.591957314E12, 18.0], [1.591957315E12, 38.0], [1.591957316E12, 28.0], [1.591957317E12, 14.0], [1.591957308E12, 72.0], [1.591957309E12, 348.0], [1.59195731E12, 12.0], [1.591957311E12, 40.0], [1.591957312E12, 24.0], [1.591957323E12, 436.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.591957323E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 10.0, "minX": 1.591957309E12, "maxY": 834.0, "series": [{"data": [[1.591957318E12, 52.0], [1.591957319E12, 10.0], [1.59195732E12, 50.0], [1.591957321E12, 58.0], [1.591957322E12, 364.0], [1.591957313E12, 38.0], [1.591957314E12, 18.0], [1.591957315E12, 38.0], [1.591957316E12, 28.0], [1.591957317E12, 14.0], [1.591957309E12, 20.0], [1.59195731E12, 12.0], [1.591957311E12, 40.0], [1.591957312E12, 24.0], [1.591957323E12, 834.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.591957323E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.591957309E12, "maxY": 398.0, "series": [{"data": [[1.591957322E12, 54.0], [1.591957323E12, 346.0]], "isOverall": false, "label": " /api/meddelande-success", "isController": false}, {"data": [[1.591957322E12, 2.0], [1.591957323E12, 398.0]], "isOverall": false, "label": " /api/user/matvarden/ogranskade-success", "isController": false}, {"data": [[1.591957318E12, 8.0], [1.59195732E12, 2.0], [1.591957321E12, 34.0], [1.591957311E12, 6.0], [1.591957322E12, 262.0], [1.591957312E12, 4.0], [1.591957323E12, 74.0], [1.591957313E12, 6.0], [1.591957316E12, 4.0]], "isOverall": false, "label": "/api/user/paminnelser-success", "isController": false}, {"data": [[1.591957318E12, 44.0], [1.591957319E12, 10.0], [1.59195732E12, 48.0], [1.591957321E12, 24.0], [1.591957322E12, 46.0], [1.591957313E12, 32.0], [1.591957314E12, 18.0], [1.591957315E12, 38.0], [1.591957316E12, 24.0], [1.591957317E12, 14.0], [1.591957309E12, 20.0], [1.59195731E12, 12.0], [1.591957311E12, 34.0], [1.591957312E12, 20.0], [1.591957323E12, 16.0]], "isOverall": false, "label": "/api/user/user-details-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.591957323E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 10.0, "minX": 1.591957309E12, "maxY": 834.0, "series": [{"data": [[1.591957318E12, 52.0], [1.591957319E12, 10.0], [1.59195732E12, 50.0], [1.591957321E12, 58.0], [1.591957322E12, 364.0], [1.591957313E12, 38.0], [1.591957314E12, 18.0], [1.591957315E12, 38.0], [1.591957316E12, 28.0], [1.591957317E12, 14.0], [1.591957309E12, 20.0], [1.59195731E12, 12.0], [1.591957311E12, 40.0], [1.591957312E12, 24.0], [1.591957323E12, 834.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.591957323E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

