<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>se.metria.xplore</groupId>
        <artifactId>backend</artifactId>
        <version>1.0</version>
    </parent>
    <groupId>se.metria</groupId>
    <artifactId>markkoll</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>markkoll</name>
    <description>Markkoll</description>

    <properties>
        <java.version>11</java.version>

        <jooq-codegen-xml.server>localhost</jooq-codegen-xml.server>
        <jooq-codegen-xml.port>5432</jooq-codegen-xml.port>
        <jooq-codegen-xml.database>markkoll</jooq-codegen-xml.database>
        <jooq-codegen-xml.user>markkoll</jooq-codegen-xml.user>
        <jooq-codegen-xml.schema>markkoll</jooq-codegen-xml.schema>
        <jooq-codegen-xml.passwd>mysecretpassword</jooq-codegen-xml.passwd>

        <db.server>pgtest.prodstod.se</db.server>
        <db.port>5432</db.port>
        <db.database>markkoll_utv</db.database>
        <db.user>markkoll</db.user>
        <db.passwd>9nBj8WimPxw0RXz20</db.passwd>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
        <dependency>
            <groupId>io.zonky.test</groupId>
            <artifactId>embedded-database-spring-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Vi inkluderar mockito-inline fÃ¶r att mocka statiska metoder/klasser -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-inline</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
            <version>2.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.flywaydb.flyway-test-extensions</groupId>
            <artifactId>flyway-spring-test</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webflux</artifactId>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
        </dependency>
        <dependency>
            <groupId>se.metria.xplore</groupId>
            <artifactId>logging-tracing</artifactId>
            <version>1.0</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-spatial</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.keycloak</groupId>
            <artifactId>keycloak-spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-acl</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
        </dependency>
        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache-core</artifactId>
            <version>2.6.11</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
            <version>2.7.0</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-gateway-mvc</artifactId>
            <version>3.0.4</version>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-jaxrs</artifactId>
            <version>1.5.0</version>
        </dependency>
        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>jackson-databind-nullable</artifactId>
        </dependency>
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-afterburner</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jdk8</artifactId>
        </dependency>
        <dependency>
            <groupId>org.modelmapper</groupId>
            <artifactId>modelmapper</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-main</artifactId>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-shapefile</artifactId>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-epsg-hsql</artifactId>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-geojson</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-meta</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-codegen</artifactId>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-opengis</artifactId>
            <version>${geotools.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sun.xml.messaging.saaj</groupId>
            <artifactId>saaj-impl</artifactId>
            <version>1.4.0</version>
        </dependency>
        <dependency>
            <groupId>javax.xml.soap</groupId>
            <artifactId>saaj-api</artifactId>
            <version>1.3.1</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web-services</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>se.metria.xplore</groupId>
            <artifactId>authorization</artifactId>
            <version>1.0</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.docx4j</groupId>
            <artifactId>docx4j-JAXB-ReferenceImpl</artifactId>
            <version>11.3.2</version>
        </dependency>
        <dependency>
            <groupId>org.docx4j</groupId>
            <artifactId>docx4j-export-fo</artifactId>
            <version>11.3.2</version>
        </dependency>
        <!-- FÃ¶r att kÃ¶ra konvertering till PDF med lokal Wordinstans -->
        <!--<dependency>
            <groupId>org.docx4j</groupId>
            <artifactId>docx4j-JAXB-ReferenceImpl</artifactId>
            <version>8.3.1</version>
        </dependency>
        <dependency>
            <groupId>org.docx4j</groupId>
            <artifactId>docx4j-documents4j-local</artifactId>
            <version>8.3.1</version>
        </dependency>-->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vladmihalcea</groupId>
            <artifactId>hibernate-types-55</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>se.metria.xplore</groupId>
            <artifactId>geoserver-admin</artifactId>
            <version>1.0</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>se.metria.xplore</groupId>
            <artifactId>map-utils</artifactId>
            <version>1.0</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>
    <repositories>
        <repository>
            <id>GeoSolutions</id>
            <name>GeoSolutions</name>
            <url>https://repo.osgeo.org/repository/release/</url>
        </repository>
    </repositories>
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jvnet.jaxb2.maven2</groupId>
                <artifactId>maven-jaxb2-plugin</artifactId>
                <version>0.14.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <schemaLanguage>WSDL</schemaLanguage>
                    <generatePackage>se.metria.markkoll.fsokws</generatePackage>
                    <schemas>
                        <schema>
                            <url>https://fastighetsok.metria.se/fsok-2.3-ws/webservice?wsdl</url>
                        </schema>
                    </schemas>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
                <version>${flyway.version}</version>
                <configuration>
                    <schemas>
                        <schema>markkoll</schema>
                        <schema>el</schema>
                        <schema>fiber</schema>
                        <schema>finfo</schema>
                        <schema>elnat</schema>
                        <schema>config</schema>
                    </schemas>
                    <url>jdbc:postgresql://${db.server}:${db.port}/${db.database}</url>
                    <user>${db.user}</user>
                    <password>${db.passwd}</password>
                    <locations>
                        <location>filesystem:${project.basedir}/src/main/resources/db/migration</location>
                    </locations>
                    <baselineVersion>1.0.1</baselineVersion>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                        <version>42.2.8</version>
                    </dependency>
                </dependencies>
            </plugin>
        <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <!--
                4.0.0 lade till org.openapitools.jackson.nullable som inte finns eller anvÃ¤nds
                https://github.com/OpenAPITools/openapi-generator/issues/2901
                -->
                <version>${openapi-generator.version}</version>
                <executions>
                    <execution>
                        <id>api-generation</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${basedir}/../../openapi/markkoll/markkoll-api.yaml</inputSpec>
                            <generatorName>spring</generatorName>
                            <modelPackage>se.metria.markkoll.openapi.model</modelPackage>
                            <modelNameSuffix>Dto</modelNameSuffix>
                            <apiPackage>se.metria.markkoll.openapi.api</apiPackage>
                            <configOptions>
                                <useTags>true</useTags>
                                <sourceFolder>openapi</sourceFolder>
                                <java8>true</java8>
                                <interfaceOnly>true</interfaceOnly>
                                <unhandledException>true</unhandledException>
                            </configOptions>
                            <typeMappings>
                                <typeMapping>OffsetDateTime=java.time.LocalDateTime</typeMapping>
                                <typeMapping>SortDirection=org.springframework.data.domain.Sort.Direction</typeMapping>
                            </typeMappings>

                            <!-- GÃ¶r sÃ¥ att genereringen av Dto fÃ¶r formulÃ¤rmodellen i multipart/form-data funkar -->
                            <globalProperties>
                                <skipFormModel>false</skipFormModel>
                            </globalProperties>
                        </configuration>
                    </execution>
                    <execution>
                        <id>api-generation-kundconfig</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${basedir}/../../openapi/kundconfig-api.yaml</inputSpec>
                            <generatorName>spring</generatorName>
                            <modelPackage>se.metria.kundconfig.openapi.model</modelPackage>
                            <modelNameSuffix>Dto</modelNameSuffix>
                            <generateSupportingFiles>true</generateSupportingFiles>
                            <apiPackage>se.metria.kundconfig.openapi.api</apiPackage>
                            <configOptions>
                                <sourceFolder>openapi</sourceFolder>
                                <java8>true</java8>
                                <interfaceOnly>true</interfaceOnly>
                                <unhandledException>true</unhandledException>
                                <globalProperties>
                                    <skipFormModel>false</skipFormModel>
                                </globalProperties>
                            </configOptions>
                            <typeMappings>
                                <!-- importMapping funkar inte i API genereringen sÃ¥ vi anger fullstÃ¤ndiga klassen med paketnamn... -->
                                <typeMapping>OffsetDateTime=java.time.LocalDateTime</typeMapping>
                            </typeMappings>
                            <importMappings>
                                <importMapping>java.time.OffsetDateTime=java.time.LocalDateTime</importMapping>
                            </importMappings>
                        </configuration>
                    </execution>
                    <execution>
                        <id>api-client-generation-dokument-converter</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${basedir}/../../openapi/dokument-converter-api.yaml</inputSpec>
                            <generatorName>java</generatorName>
                            <library>resttemplate</library>
                            <modelPackage>se.metria.markkoll.openapi.dokument_converter.model</modelPackage>
                            <modelNameSuffix>Dto</modelNameSuffix>
                            <invokerPackage>se.metria.markkoll.openapi.dokument_converter.client</invokerPackage>
                            <apiPackage>se.metria.markkoll.openapi.dokument_converter.api</apiPackage>
                            <generateApiTests>false</generateApiTests>
                            <configOptions>
                                <sourceFolder>openapi</sourceFolder>
                                <java8>true</java8>
                                <interfaceOnly>true</interfaceOnly>
                                <dateLibrary>java8</dateLibrary>
                            </configOptions>
                            <typeMappings>
                                <!-- importMapping funkar inte i API genereringen sÃ¥ vi anger fullstÃ¤ndiga klassen med paketnamn... -->
                                <typeMapping>OffsetDateTime=java.time.LocalDateTime</typeMapping>
                            </typeMappings>
                            <importMappings>
                                <importMapping>java.time.OffsetDateTime=java.time.LocalDateTime</importMapping>
                            </importMappings>
                        </configuration>
                    </execution>
                    <execution>
                        <id>api-client-generation-finfo</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${basedir}/../../openapi/finfo-api.yaml</inputSpec>
                            <generatorName>java</generatorName>
                            <library>resttemplate</library>
                            <modelPackage>se.metria.markkoll.openapi.finfo.model</modelPackage>
                            <modelNamePrefix>Finfo</modelNamePrefix>
                            <modelNameSuffix>Dto</modelNameSuffix>
                            <invokerPackage>se.metria.markkoll.openapi.finfo.client</invokerPackage>
                            <apiPackage>se.metria.markkoll.openapi.finfo.api</apiPackage>
                            <generateApiTests>false</generateApiTests>
                            <generateModelTests>false</generateModelTests>
                            <configOptions>
                                <sourceFolder>openapi</sourceFolder>
                                <java8>true</java8>
                                <interfaceOnly>true</interfaceOnly>
                                <dateLibrary>java8</dateLibrary>
                            </configOptions>
                            <typeMappings>
                                <!-- importMapping funkar inte i API genereringen sÃ¥ vi anger fullstÃ¤ndiga klassen med paketnamn... -->
                                <typeMapping>OffsetDateTime=java.time.LocalDateTime</typeMapping>
                            </typeMappings>
                            <importMappings>
                                <importMapping>java.time.OffsetDateTime=java.time.LocalDateTime</importMapping>
                            </importMappings>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen-maven</artifactId>
                <executions>
                    <execution>
                        <id>jooq-codegen-java</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <generator>
                        <name>org.jooq.codegen.JavaGenerator</name>
                        <database>
                            <name>org.jooq.meta.xml.XMLDatabase</name>
                            <properties>
                                <!-- Use any of the SQLDialect values here -->
                                <property>
                                    <key>dialect</key>
                                    <value>POSTGRES</value>
                                </property>

                                <!-- Specify the location of your database file -->
                                <property>
                                    <key>xmlFile</key>
                                    <value>db/jooq/information_schema.xml</value>
                                </property>
                            </properties>

                            <includes>.*</includes>
                        </database>
                        <target>
                            <packageName>se.metria.markkoll.db</packageName>
                            <directory>target/generated-sources/jooq/markkoll</directory>
                        </target>
                        <generate>
                            <javaTimeTypes>true</javaTimeTypes>
                        </generate>
                    </generator>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <argLine>-Dfile.encoding=UTF-8</argLine>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>jooq-codegen-xml</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jooq</groupId>
                        <artifactId>jooq-codegen-maven</artifactId>
                        <executions>
                            <execution>
                                <id>jooq-codegen-xml</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>generate</goal>
                                </goals>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>org.postgresql</groupId>
                                <artifactId>postgresql</artifactId>
                                <version>42.2.5</version>
                            </dependency>
                        </dependencies>
                        <configuration>
                            <jdbc>
                                <driver>org.postgresql.Driver</driver>
                                <url>jdbc:postgresql://${jooq-codegen-xml.server}:${jooq-codegen-xml.port}/${jooq-codegen-xml.database}</url>
                                <user>${jooq-codegen-xml.user}</user>
                                <password>${jooq-codegen-xml.passwd}</password>
                            </jdbc>
                            <generator>
                                <name>org.jooq.codegen.XMLGenerator</name>
                                <database>
                                    <name>org.jooq.meta.postgres.PostgresDatabase</name>
                                    <schemata>
                                        <schema>
                                            <inputSchema>markkoll</inputSchema>
                                        </schema>
                                    </schemata>
                                    <includes>.*</includes>
                                    <excludes>crosstab.*|connectby.*|flyway.*|pg_.*</excludes>
                                </database>
                                <target>
                                    <packageName>jooq</packageName>
                                    <directory>db</directory>
                                </target>
                            </generator>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
